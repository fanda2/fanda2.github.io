<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Css学习基础笔记04</title>
      <link href="/2022/03/20/Css%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B004/"/>
      <url>/2022/03/20/Css%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B004/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS基础语法学习——定位，元素显示与隐藏，CSS高级技巧"><a href="#CSS基础语法学习——定位，元素显示与隐藏，CSS高级技巧" class="headerlink" title="CSS基础语法学习——定位，元素显示与隐藏，CSS高级技巧"></a>CSS基础语法学习——定位，元素显示与隐藏，CSS高级技巧</h1><h2 id="CSS定位（position）"><a href="#CSS定位（position）" class="headerlink" title="CSS定位（position）"></a>CSS定位（position）</h2><ol><li><p>元素的定位属性</p><ul><li><p>元素的定位属性主要包括定位模式和边偏移两个部分</p></li><li><p>边偏移</p><table><thead><tr><th align="center">边偏移属性</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">top</td><td align="left">顶部偏移量，定义元素对其父元素上边线的距离</td></tr><tr><td align="center">bottom</td><td align="left">底部偏移量，定义元素对其父元素下边线的距离</td></tr><tr><td align="center">left</td><td align="left">左侧偏移量，定义元素对其父元素左边线的距离</td></tr><tr><td align="center">right</td><td align="left">右侧偏移量，定义元素对其父元素右边线的距离</td></tr></tbody></table></li><li><p>定位模式（定位的分类）</p><table><thead><tr><th align="center">值</th><th align="left">描述</th></tr></thead><tbody><tr><td align="center">static</td><td align="left">自动定位（默认定位方式）</td></tr><tr><td align="center">relative</td><td align="left">相对定位，相对于其原文档流的位置进行定位</td></tr><tr><td align="center">absolute</td><td align="left">绝对定位，相对于其上一个已经定位的父元素进行定位</td></tr><tr><td align="center">fixed</td><td align="left">固定定位，相对于浏览器窗口进行定位</td></tr></tbody></table></li><li><p>静态定位（static）</p><ul><li>静态定位为默认定位模式，对于边偏移无效。一般用于<code>清除定位</code></li></ul></li><li><p>相对定位（relative）</p><ul><li>将元素相对于它在的标准流中的位置进行定位</li><li>通过<code>相对定位</code>后通过边偏移属性改变元素的位置，但是原来所占有的位置会继续占有</li><li>每次移动位置是以自己的左上角为基点进行移动。<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/CSS%2Frelative.png" alt="相对定位图解"></li></ul></li><li><p>绝对定位(absolute)</p><ul><li>绝对定位完全脱离标准流的,它不占有位置</li><li>若父元素<code>没有</code>设置定位,则子元素会以浏览器作为标准进行偏移,若父元素设置定位,则以最近父元素位置作为基准进行偏移</li></ul></li><li><p>固定定位(fixed)</p><ul><li>固定定位是绝对定位的一种特殊形式</li><li>固定定位的元素跟父级没有任何关系,只认浏览器</li><li>固定定位完全脱离标准流,不占有位置,不随着滚动条滚动</li><li><code>注:</code>IE6等低版本浏览器不支持固定定位</li><li><code>注:</code>固定定位的盒子一定要写宽和高,除非有内容撑开不用谢</li></ul></li></ul></li><li><p>子绝父相<code>**</code></p><ul><li>孩子元素使用<code>绝对定位</code>(不占有位置,脱离标准流),父级元素使用<code>相对定位</code>(占有位置,不脱离标准流)</li></ul></li><li><p>绝对定位的盒子水平/垂直居中</p><ul><li>普通定位的盒子在设置宽度后使用<code>margin: 0 auto </code>可以实现水平居中,添加绝对定位后则失效</li><li>定位的盒子实现水平/垂直居中有一个算法:<ul><li>首先left:50%</li><li>左走自己宽度的一半</li></ul></li></ul></li><li><p>叠放次序(z-index)</p><ul><li>当多个元素同时发生定位时,定位元素之间有可能发生重叠。</li><li>z-index默认值为0,取值越大,定位元素在层叠元素中越居上。</li><li>如果取值相同,根据书写顺序后来居上。</li><li>后面的数字一定不能加单位。</li><li>只有<code>相对定位</code>,<code>绝对定位</code>,<code>固定定位</code>有此属性,其余标准流,浮动,静态定位都无此属性。</li></ul></li><li><p>对以上四种定位的总结</p><table><thead><tr><th align="left">定位模式</th><th align="left">是否脱标占有位置</th><th align="left">是否可以使用边偏移</th><th align="left">移动位置基准</th></tr></thead><tbody><tr><td align="left">静态 static</td><td align="left">不脱标,正常模式</td><td align="left"><code>不</code>可使用</td><td align="left">正常模式</td></tr><tr><td align="left">相对定位 relative</td><td align="left">不脱标,占有位置</td><td align="left">可以使用</td><td align="left">相对自身位置移动</td></tr><tr><td align="left">绝对定位 absolute</td><td align="left">脱标,不占有位置</td><td align="left">可以使用</td><td align="left">相对于定位父级移动位置</td></tr><tr><td align="left">固定定位 fixed</td><td align="left">脱标,不占有位置</td><td align="left">可以使用</td><td align="left">相对于浏览器移动位置</td></tr></tbody></table></li><li><p>定位模式转换</p><ul><li><code>和浮动一样</code>,元素添加绝对定位和相对定位后(都是脱标不占位),元素模式也会发生转换,都转换为行内块模式</li><li>一些行内元素,若需要添加浮动,或者是绝对定位,相对定位,则不在需要添加模式转换<code>display:inline-block</code>,可以直接设置宽度和高度。</li></ul></li></ol><h2 id="二、元素的显示与隐藏"><a href="#二、元素的显示与隐藏" class="headerlink" title="二、元素的显示与隐藏"></a>二、元素的显示与隐藏</h2><ol><li>在CSS中有3个显示和隐藏的单词比较常见，他们分别是<code>display</code>,<code>visibility</code>,<code>overflow</code></li><li><code>display</code>显示<ul><li><code>display:none</code>隐藏对象，与它相反的是<code>display:block</code>,除了转换为块级元素外，同时还有显示元素的意思。</li><li>特点：隐藏元素后不在保留位置。</li></ul></li><li><code>visibility</code>可见性<ul><li>设置或检索是否显示对象</li><li>visible:对象可视</li><li>hidden：对象隐藏</li><li>特点：隐藏之后继续保持原有位置</li></ul></li><li>overflow溢出<ul><li>检索或设置当前对象的内容超过其指定高度或宽度时如何管理内容</li><li>visible:不剪切内容也不添加滚动条（默认）</li><li>auto：超出自动显示滚动条，不超出不显示滚动条</li><li>hidden：不显示超过对象尺寸的内容，超过部分隐藏掉</li><li>scroll：不管超不超出内容，总是显示隐藏条</li></ul></li></ol><h2 id="三、CSS高级技巧"><a href="#三、CSS高级技巧" class="headerlink" title="三、CSS高级技巧"></a>三、CSS高级技巧</h2><ol><li><p>CSS用户界面样式</p><ul><li>所谓用户界面样式，就是更让一些用户操作样式。比如：更改用户的鼠标样式，表单轮廓等。</li></ul></li><li><p>鼠标样式cursor</p><ul><li>设置或检索在对象上移动的鼠标指针采用何种系统预定义的光标形状。</li><li><code>cursor:default 小白| pointer 小手| move 移动|text 文本</code></li></ul></li><li><p>轮廓outline</p><ul><li>是绘制于元素周围的一条线，位于边框边缘的外围，可起到突出元素的作用</li><li><code>outline: outline-color|| outline-style || outline-width</code></li><li>最直接的写法 outline: 0; 取消轮廓线</li></ul></li><li><p>防止拖拽文本域（resize）</p><ul><li>设置resize:none 可以防止 火狐，谷歌等浏览器随意拖动文本域</li></ul></li><li><p>vertical-align垂直对齐</p><ul><li>通常用来控制图片或默认表单与文字的对齐方式</li><li><code>vertical-align</code>:middle对于块级元素无效</li><li><code>vertical-align: baseline| middle | top | bottom</code><br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/CSS%2Fvertical.png" alt="vertical-align三种模式"></li></ul></li><li><p>去除图片底部空白间隙</p><ul><li>可以看见上图<code>div</code>块元素添加边框后底部具有空白间隙。</li><li>有一个十分重要的特性，图片或者表单等<code>行内块元素</code>，它们的底线会和父级盒子的基线对齐。这样就造成了图片底部的空白间隙。</li><li>解决方法：<ul><li>给img标签添加<code>display:block;</code>转换为块级元素就不会存在此问题</li><li>设置img标签<code>vertical-align: top | middle;</code>因为是默认基线对齐才产生的空白间隙，只要设置对齐方式为middle或者top即可解决。（用的较多）</li></ul></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端学习 </tag>
            
            <tag> Css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Css学习基础笔记03</title>
      <link href="/2022/03/19/Css%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B003/"/>
      <url>/2022/03/19/Css%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B003/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS基础语法学习——CSS三大特性，网页布局，浮动，清除浮动"><a href="#CSS基础语法学习——CSS三大特性，网页布局，浮动，清除浮动" class="headerlink" title="CSS基础语法学习——CSS三大特性，网页布局，浮动，清除浮动"></a>CSS基础语法学习——CSS三大特性，网页布局，浮动，清除浮动</h1><h2 id="一、CSS三大特性"><a href="#一、CSS三大特性" class="headerlink" title="一、CSS三大特性"></a>一、CSS三大特性</h2><ol><li><p>CSS层叠样式</p><ul><li>若样式冲突，遵循的原则是就近原则，哪个样式距离结构近就执行哪个样式</li><li>样式不冲突是不会层叠的</li></ul></li><li><p>CSS继承性</p><ul><li>子标签会继承父标签的某些样式，如文本颜色和字号</li><li><code>text- , font- , line- </code>这些元素开头的几乎都能继承  </li></ul></li><li><p>CSS优先性</p><ul><li>元素定义的样式会覆盖继承样式</li><li>权重相同时，css遵循就近原则，也就是靠近元素的优先级更大</li><li>CSS定义了一个<code>!important</code>命令，该命令赋予最大优先级</li></ul></li><li><p>CSS特殊性（Specificity）</p><ul><li>Specificity是一个四位的数字串，更像四个级别，从左到右，左面的最大，一级大于一级，数位之间没有进制，级别之间不可跨越。<code>继承的权重为0</code></li></ul><table><thead><tr><th align="center">继承或*的贡献值</th><th align="center">0，0，0，0</th></tr></thead><tbody><tr><td align="center">每个元素（标签）贡献值为</td><td align="center">0，0，0，1</td></tr><tr><td align="center">每个类，伪类贡献值为</td><td align="center">0，0，1，0</td></tr><tr><td align="center">每个ID贡献值为</td><td align="center">0，1，0，0</td></tr><tr><td align="center">每个行内样式贡献值为</td><td align="center">1，0，0，0</td></tr><tr><td align="center">每个!important贡献值为</td><td align="center">无穷大</td></tr></tbody></table><ul><li>权重叠加<figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">ul</span> <span class="selector-tag">li</span>{</span><br><span class="line">    <span class="attribute">color</span>:red</span><br><span class="line">}</span><br><span class="line"><span class="selector-tag">li</span>{</span><br><span class="line">    <span class="attribute">color</span>:green</span><br><span class="line">}  </span><br><span class="line"><span class="comment">/* 最终会显示红色 */</span></span><br></pre></td></tr></tbody></table></figure></li></ul></li></ol><h2 id="二、网页布局"><a href="#二、网页布局" class="headerlink" title="二、网页布局"></a>二、网页布局</h2><ol><li><p>网页布局的本质:把网页元素比如文字图片等等，放入盒子里面，然后利用CSS摆放盒子的过程，就是网页布局。</p></li><li><p>盒子模型（box-model）</p><ul><li><p>盒子边框（border）</p><ul><li>语法：<code>border:border-width||border-style||border-color</code></li><li>边框样式用于定义页面中边框的风格</li><li>none:没有边框即忽略所有边框的宽度</li><li>solid: 边框为单实线</li><li>dashed:边框为虚线</li><li>dotted:边框为点线</li><li>double:边框为双实线</li><li>表格细线边框：<code>border-collapse:collapse</code>表示边框合并在一起</li><li>圆角边框：<code>border-radius:左上角 右上角 右下角 左下角</code></li></ul></li><li><p>内边距（padding）</p><ul><li>内容距离边框的距离</li><li><code>padding</code>只有一个值代表四边均为这个值，只有两个值，表示上下边距为第一个数值，左右边距为第二个数值</li><li>上 右 下 左</li></ul></li><li><p>外边距(margin)</p><ul><li>用于设置外边距，设置外边距会使元素之间变为”空白”，这段空白通常不能放置其他内容</li><li>外边距实现盒子水平居中对齐：必须是块级元素，设置宽度(width)<figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> {<span class="attribute">width</span>:<span class="number">100px</span>;<span class="attribute">margin</span>: <span class="number">0</span> auto}</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>清除内外边距，默认样式</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">*{</span><br><span class="line">    <span class="attribute">margin</span>: <span class="number">0</span>;</span><br><span class="line">    <span class="attribute">padding</span>: <span class="number">0</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p><code>注：</code>行内元素没有上下外边距，只有左右外边距</p></li><li><p><code>相邻块元素</code>外边距合并：同一列的两个盒子在上面一个设置下外边距，下面一个设置上外边距的时候会合并，最终间距为两个中的大者；如下：最终两个盒子间距为<code>100px</code></p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">     <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"utf-8"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">title</span>&gt;</span><span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-tag">div</span>{</span></span><br><span class="line"><span class="css"><span class="attribute">width</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">height</span>: <span class="number">100px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">background</span>: <span class="number">#008000</span>;</span></span><br><span class="line"><span class="css">}</span></span><br><span class="line"><span class="css"><span class="selector-class">.top</span>{</span></span><br><span class="line"><span class="css"><span class="attribute">background</span>: pink;</span></span><br><span class="line"><span class="css"><span class="attribute">margin-bottom</span>:<span class="number">100px</span> ;</span></span><br><span class="line"><span class="css">}</span></span><br><span class="line"><span class="css"><span class="selector-class">.bottom</span>{</span></span><br><span class="line"><span class="css"><span class="attribute">margin-top</span>: <span class="number">40px</span>;</span></span><br><span class="line"><span class="css">}</span></span><br><span class="line"><span class="css"> </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bottom"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>嵌套块元素垂直外边距的合并：对于两个嵌套关系的块元素，如果父元素没有<code>上内边距</code>及<code>边框</code>，则父元素的上外边距会与子元素的上外边距发生合并，合并后的外边距为两者中的较大者，即使父元素的上外边距为0，也会发生合并。解决方案为：为父元素定义1像素上边框或上内边距，或者为父元素定义<code>overflow:hidden</code></p></li><li><p><code>注：</code>度属性width和高度属性height仅适用于<code>块级元素</code>，对行内元素无效（ img标签和input除外）。</p></li><li><p><code>注：</code>计算盒子模型的总高度时，还应考虑上下两个盒子<code>垂直外边距合并</code>的情况。</p></li><li><p><code>注：</code>如果一个盒子没有给定宽度/高度或者继承父亲的宽度/高度，则padding 不会影响本盒子大小。</p></li></ul></li><li><p>盒子模型布局稳定性</p><ul><li><code>width&gt;padding&gt;margin</code></li><li><code>margin</code>会有外边距合并，在IE6下面margin加倍的bug，所以最后使用</li><li><code>padding</code>会影响盒子大小，需要进行加减计算（比较麻烦）其次使用</li><li><code>width</code>最常用，我们经常使用宽度剩余法和高度剩余法来做</li></ul></li><li><p>CSS3盒模型</p><ul><li>CSS3中可通过<code>box-sizing</code>来指定盒模型，即可指定为<code>content-box</code>,<code>border-box</code>。这样我们计算盒子大小的方式就会发生改变。</li><li><code>box-sizing:content-box</code> 盒子大小为width+padding+border，content-box为默认值</li><li><code>box-sizing:border-box</code> 盒子大小为width,也就是说padding和border包含在width里面</li></ul></li><li><p>盒子阴影</p><ul><li><code>box-shadow</code>:水平阴影 垂直阴影 模糊距离 阴影尺寸 阴影颜色 内外阴影；</li></ul></li></ol><h2 id="三、浮动（float）"><a href="#三、浮动（float）" class="headerlink" title="三、浮动（float）"></a>三、浮动（float）</h2><ol><li>CSS定位的三种机制：普通流（标准流）、浮动、定位</li><li>普通流（normal flow）</li><li>浮动流<ul><li>原本用于图文显示的文字环绕效果，后用于页面布局</li><li>设置浮动的元素会脱离标准普通流的控制，移动到其父元素中指定位置的过程。不占位置，会影响标准流。浮动只有左右浮动。</li><li>浮动首先需要添加标准流父级，浮动元素总会找到离它最近的父级元素对齐，但是不会超出内边距的范围。</li><li><code>块级元素</code>添加浮动后具有行内块的特性</li><li><code>行内元素</code>添加浮动后也具有行内块特性</li></ul></li></ol><h2 id="四、版心与布局流程"><a href="#四、版心与布局流程" class="headerlink" title="四、版心与布局流程"></a>四、版心与布局流程</h2><ol><li><p>“版心”（可视区）是指网页中主体内容所在的区域/一般在浏览器窗口中水平居中显示。常见的宽度有960px,980px,1000px,1200px等。</p></li><li><p>布局流程</p><ul><li>确定页面版心（可视区）</li><li>分析页面中的行模块，以及每个行模块中的列模块</li><li>制作HTNL结构</li><li>CSS初始化，然后开始运用盒子模型的原理，通过DIV+CSS布局来控制页面的各个模块。</li></ul></li><li><p>快捷命令<code>.top+.banner+(.main&gt;.left+.right)+.bottom</code>,点击tab键生成</p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"top"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"banner"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"main"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"left"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"right"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">"bottom"</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li><li><p>清除浮动</p><ul><li>由于浮动元素<code>不再占用原文档流的位置</code>，所以它会对后面的<code>元素排版</code>产生影响，为了解决这些问题，此时就需要在该元素中清除浮动。</li><li>并不是清除浮动，<strong>而是清除浮动后造成的影响</strong></li><li>清除浮动的本质：解决父级元素因为子级元素浮动造成的<code>高度为0</code>的问题。</li><li>清除浮动的方法（闭合浮动），用于在添加额外标签后添加样式<ul><li><code>选择器:{clear:属性值}</code></li><li>left:不允许左侧有浮动元素（清除左侧浮动的影响）</li><li>right:不允许右侧有浮动元素（清除右侧浮动的影响）</li><li>both:同时清除左右浮动的影响</li></ul></li></ul></li><li><p>清除浮动的方法</p><ul><li><p>额外标签法： 是wac推荐的做法是通过在浮动元素末尾添加一个空的标签，例如<code>〈div style="clear:both"&gt;&lt;/div&gt;</code>，或则其他标签br等亦可。</p><ul><li>优点：通俗易懂，书写方便</li><li>缺点：添加许多无意义标签，结构化较差。 </li></ul></li><li><p>父级添加overflow属性方法</p><ul><li>可以通过触发BFC的方式清除浮动效果（块级格式化上下文）</li><li>可以给父级添加：<code>overflow：hidden|auto|scroll</code> 均可实现</li><li>优点：代码简洁</li><li>缺点：内容增多时容易造成不会自动换行导致内容被隐藏掉，无法显示需要溢出的元素。</li></ul></li><li><p>使用after伪元素清除浮动</p><ul><li>本质也是额外标签法，但要将content中的内容不显示</li><li>以下<code>.clearfloat</code>为选择浮动元素的父级块元素</li></ul>  <figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">       <span class="selector-class">.clearfloat</span>:after{</span><br><span class="line">content: <span class="string">"."</span>;     <span class="comment">/* 内容为小点,尽量不要多加内容,否则旧版本浏览器会有间隙 */</span></span><br><span class="line"><span class="attribute">display</span>: block;    <span class="comment">/* 转换为块级元素 */</span></span><br><span class="line"><span class="attribute">height</span>: <span class="number">0</span>;</span><br><span class="line"><span class="attribute">visibility</span>: hidden;   <span class="comment">/* 隐藏盒子 */</span></span><br><span class="line"><span class="attribute">clear</span>: both;      <span class="comment">/* 清除浮动 */</span></span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.clearfloat</span>{</span><br><span class="line">*zoom: <span class="number">1</span>;    <span class="comment">/* *代表只有IE6,7浏览器能识别的特殊符号,带*号后只有IE6,7才执行.zoom就是IE浏览器清除浮动的方式 */</span></span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><ul><li>优点：符号闭合浮动的思想，结构语义化准确</li><li>缺点：由于IE6-7不支持 :after ，使用zoom:1触发hasLayout</li></ul></li><li><p>使用after和before双伪元素清除浮动</p><ul><li>优点：代码更简洁</li><li>缺点：由于IE6-7不支持 :after ，使用zoom:1触发hasLayout<figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">       <span class="selector-class">.clearfloat</span>:before,.clearfloat:after{</span><br><span class="line">content: <span class="string">""</span>;</span><br><span class="line"><span class="attribute">display</span>: table;  <span class="comment">/* 触发BFC,BFC可以清除浮动 */</span></span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.clearfloat</span>:after{</span><br><span class="line">clear: both;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.clearfloat</span>{</span><br><span class="line">*zoom: <span class="number">1</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端学习 </tag>
            
            <tag> Css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Css学习基础笔记02</title>
      <link href="/2022/03/18/Css%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B002/"/>
      <url>/2022/03/18/Css%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80%E7%AC%94%E8%AE%B002/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS基础语法学习——样式表，标签显示模式，复合选择器，背景"><a href="#CSS基础语法学习——样式表，标签显示模式，复合选择器，背景" class="headerlink" title="CSS基础语法学习——样式表，标签显示模式，复合选择器，背景"></a>CSS基础语法学习——样式表，标签显示模式，复合选择器，背景</h1><h2 id="一、样式表"><a href="#一、样式表" class="headerlink" title="一、样式表"></a>一、样式表</h2><ol><li><p>内部样式表</p><ul><li>内部样式表将CSS代码写在HTML头部标签中，并且用style标签定义<figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span></span><br><span class="line">        选择器：{  属性名：属性值 }</span><br><span class="line">    <span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>行内样式表（内联样式表）</p><ul><li>是通过标签的style属性来设置元素的样式<figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;标签名 style="属性名:属性值;属性名2:属性值2"&gt; &lt;/标签名&gt;</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>外部样式表（外链式）</p><ul><li>从外部引入CSS文件通过link标签将外部样式文件链接到HTML文件中,<code>link</code>标签为但标签</li><li>rel：表示当前文件与被链接文档之间的关系。指定为”stylesheet“,表示被链接的文档为一个样式表<figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"css文件路径/外部链接网址"</span> <span class="attr">type</span>=<span class="string">"text/css"</span>  <span class="attr">rel</span>=<span class="string">""</span><span class="attr">stylesheet</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>各种样式表之间的比较</p><table><thead><tr><th align="center">样式表</th><th align="left">优点</th><th align="center">缺点</th><th align="center">使用情况</th><th align="center">控制范围</th></tr></thead><tbody><tr><td align="center">行内样式表</td><td align="left">书写方便，权重高</td><td align="center">没有实现样式和结构相分离</td><td align="center">较少</td><td align="center">控制一个标签（少）</td></tr><tr><td align="center">内联样式表</td><td align="left">部分结构和样式分离</td><td align="center">没有彻底分离</td><td align="center">较多</td><td align="center">控制一个页面（中）</td></tr><tr><td align="center">外部样式表</td><td align="left">完全实现样式与结构分离</td><td align="center">需要引入</td><td align="center">最多，比较推荐使用</td><td align="center">控制整个站点（多）</td></tr></tbody></table></li></ol><h2 id="二、标签显示模式"><a href="#二、标签显示模式" class="headerlink" title="二、标签显示模式"></a>二、标签显示模式</h2><ol><li>块级元素（block-level）<ul><li>每个块元素通常会独自占用一整行，可以对其设置宽度，高度，对齐等属性，常用于网页布局和网页结构搭建，</li><li><code>&lt;h1&gt;~&lt;h6&gt;、&lt;p&gt;、&lt;div&gt;、&lt;ul&gt;、&lt;ol&gt;、&lt;li&gt;等</code></li><li>特点：<ul><li>总是从新行开始</li><li>宽度、高度、内边距和外边距都是可以控制的</li><li>宽度默认为容器的100%</li><li>可以容纳内联元素和其他元素</li></ul></li></ul></li><li>行内元素（inline-level）<ul><li>行内元素(内联元素）不占有独立的区域，仅仅靠自身的字体大小和图像尺寸来支撑结构，一般不可以设置宽度、高度、对齐等属性，常用于控制页面中文本的样式。</li><li><code>&lt;a&gt; &lt;strong&gt; &lt;b&gt; &lt;em&gt; &lt;i&gt; &lt;del&gt; &lt;span&gt; &lt;s&gt; &lt;ins&gt; &lt;u&gt;</code></li><li>特点：<ul><li>和相邻行内元素在一行</li><li>高、宽无效，但水平方向的padding和margin可以设置，垂直方向的无效</li><li>默认宽度就是它本身内容的宽度</li><li>行内元素只能容纳文本或则其他行内元素</li></ul></li></ul></li><li>行内块标签（inline-level）<ul><li>在行内元素中有几个特殊的标签，可以对它们设置宽高和对齐属性</li><li><code>&lt;input/&gt; &lt;img/&gt; &lt;td&gt;</code></li><li>特点： <ul><li>和相邻行内元素在一行上，但是之间会有空白间隙</li><li>默认宽度就是它本省内容发宽度</li><li>高度、行高、外边距以及内边距都可以控制</li></ul></li></ul></li><li>标签显示模式转换<ul><li>块转行内：<code>display:inline</code></li><li>行内转块：<code>display:block</code></li><li>块、行内元素转换为行内块： <code>display:inline-block</code></li></ul></li></ol><h2 id="三、CSS复合选择器"><a href="#三、CSS复合选择器" class="headerlink" title="三、CSS复合选择器"></a>三、CSS复合选择器</h2><ol><li>复合选择器：复合选择器是由两个或多个基础选择器，通过不同的方式组合而成的,目的是为了可以选择更准确更精细的目标元素标签。</li><li>交集选择器<ul><li>是并且的意思，即……又…..关系<code>p.class</code></li></ul></li><li>并集选择器<ul><li>减少重读工作，有需要相同样式的标签：<code>div,p,.btn</code></li></ul></li><li>后代选择器<ul><li>后代选择器又称为包选择器。用来选择元素或元素组的后代。</li><li>把外层标签写在内层标签前面，中间以<code>空格</code>隔开。</li><li><code>div p</code> 选择div下面的p标签</li></ul></li><li>子元素选择器<ul><li>只能选择作为某个元素子元素的元素，其写法为父标签在前。子标签在后，中间以<code>&gt;</code>号隔开</li></ul></li><li>属性选择器<ul><li>属性选择由中括号来表示，如<code>a[title]</code>表示选中a标签中带有title属性的标签</li></ul><table><thead><tr><th align="center">选择器</th><th align="center">示例</th><th align="center">含义</th></tr></thead><tbody><tr><td align="center">E[attr]****</td><td align="center">a[title]</td><td align="center">存在attr属性即可</td></tr><tr><td align="center">E[attr=value]***</td><td align="center">input[type=text]</td><td align="center">存在attr属性，且attr属性值等于value</td></tr><tr><td align="center">E[attr*=value]***</td><td align="center">div[class*=jd]</td><td align="center">属性值中包含value字符，并且在任意位置</td></tr><tr><td align="center">E[attr^=value]***</td><td align="center">div[class^=at]</td><td align="center">属性值中包含value字符，并且在开始位置</td></tr><tr><td align="center">E[attr$=value]***</td><td align="center">div[class$=24]</td><td align="center">属性值中包含value字符并且在结束位置</td></tr></tbody></table></li><li>伪元素选择器<ul><li>E::first-letter 文本的第一个单词或则第一个字</li><li>E::first_line  文本第一行</li><li>E:：selection 可该表选中文本的样式</li><li>E::before 在E元素<code>内部</code>的开始位置创建一个元素，该元素为行内元素。且必须结合content属性使用</li><li>E::after 在E元素<code>内部</code>的结束位置创建一个元素<figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">    <span class="selector-class">.bottom</span><span class="selector-pseudo">::before</span>{</span><br><span class="line"><span class="attribute">content</span>: <span class="string">"加在前面"</span>;</span><br><span class="line">}</span><br><span class="line"><span class="selector-class">.bottom</span><span class="selector-pseudo">::after</span>{</span><br><span class="line"><span class="attribute">content</span>: <span class="string">"加在结尾"</span>;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li></ol><h2 id="四、CSS背景（background）"><a href="#四、CSS背景（background）" class="headerlink" title="四、CSS背景（background）"></a>四、CSS背景（background）</h2><ol><li><p>背景图片位置（image）</p><ul><li>background-reapet 图片是否平铺</li><li>background-position 可以设置图片的位置<code>left top center right</code>，也可为数字，百分比，两个数字前一个表示X,后一个表示Y</li></ul></li><li><p>背景附着：设置或检索背景图片随对象内容固定还是滚动的</p><ul><li>background-attachment:scroll||fixed</li><li>scroll:背景图像随对象内容滚动</li><li>fixed:背景图像固定</li></ul></li><li><p>背景简写(类似font)</p><ul><li>background: 背景颜色 背景图片地址 背景平铺 背景滚动 背景位置<figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">    <span class="selector-tag">div</span>{</span><br><span class="line"><span class="attribute">background</span>: <span class="number">#008000</span> <span class="built_in">url</span>(<span class="string">./img/time.png</span>) no-repeat fixed center center;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li></ul></li><li><p>背景透明（CSS3）</p><ul><li>background : rgba(0,0,0,0.5)</li></ul></li><li><p>背景缩放（CSS3）background-size</p><ul><li>background-size用于设置背景图片的尺寸，和设置img的大小一样。尽量只改一个值，防止缩放失真。</li><li>可以设置长度单位px或者百分比</li><li>设置<code>cover</code>时自动调整缩放比例，保证图片始终填满背景区域，如有溢出部分则会被<code>隐藏</code>。</li><li>设置为<code>contain</code>会自动调整缩放比例，保证图片始终<code>完整</code>的显示在背景区域。</li></ul></li><li><p>多背景（CSS3）</p><ul><li>以逗号隔开可设置多张背景，可用于自适应布局</li><li>为了避免背景色将图像覆盖，通常设置背景色在最后一组</li><li>多重阴影也可以设置：<figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">text-shadow</span>: -<span class="number">2px</span> -<span class="number">2px</span> <span class="number">3px</span> white,<span class="number">1px</span> <span class="number">1px</span> <span class="number">1px</span> <span class="number">#091921</span></span><br></pre></td></tr></tbody></table></figure></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端学习 </tag>
            
            <tag> Css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Css基础学习笔记01</title>
      <link href="/2022/03/15/Css%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001/"/>
      <url>/2022/03/15/Css%E5%9F%BA%E7%A1%80%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B001/</url>
      
        <content type="html"><![CDATA[<h1 id="CSS基础用法的相关标签01——字体，选择器，外观属性"><a href="#CSS基础用法的相关标签01——字体，选择器，外观属性" class="headerlink" title="CSS基础用法的相关标签01——字体，选择器，外观属性"></a>CSS基础用法的相关标签01——字体，选择器，外观属性</h1><h2 id="一、CSS字体"><a href="#一、CSS字体" class="headerlink" title="一、CSS字体"></a>一、CSS字体</h2><ol><li><p>font-size：(字号大小)</p><ul><li>相对长度单位：</li></ul><table><thead><tr><th align="center">相对长度单位</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">em</td><td align="center">相对于当前对象内文本的字体尺寸</td></tr><tr><td align="center">px</td><td align="center">像素，最常用的单位</td></tr><tr><td align="center"></td><td align="center"></td></tr></tbody></table><ul><li>绝对长度单位 <table><thead><tr><th align="center">绝对长度单位</th><th align="center">说明</th></tr></thead><tbody><tr><td align="center">in</td><td align="center">英寸</td></tr><tr><td align="center">cm</td><td align="center">厘米</td></tr><tr><td align="center">mm</td><td align="center">毫米</td></tr><tr><td align="center">pt</td><td align="center">点</td></tr></tbody></table></li></ul></li><li><p>font-family:(字体)</p><ul><li><code>中文</code>：微软雅黑,<code>英文</code>:Microsoft yaHei,<code>Unicode编码</code>：\5FAE\8F6F\96C5\9ED1</li><li>多个字体样式之间用英文逗号隔开</li><li>尽量使用偶数字号</li></ul></li><li><p>font-weight:(字体加粗)</p><ul><li>normal:正常字体，相当于数值中的400</li><li>bold：粗体，相当于数值中的700</li><li>bolder：定义比继承值更重的值</li><li>lighter：定义比继承制更轻的值</li></ul></li><li><p>font-style:(字体风格)</p><ul><li>normal:指定文本样式为正常</li><li>italic: 指定文本样式为斜体 ，（标签<code>&lt;em&gt;&lt;/em&gt;</code>也可以使得文字倾斜）</li><li>oblique: 指定文本样式为倾斜，单纯倾斜文字</li></ul></li><li><p>font:(综合设置样式 <code>*</code>)</p><ul><li>选择器{font: font-style  font-weight  font-size/line-height font-family}</li><li>其中不需要的属性可以省略，但至少要保留font-size和font-family属性</li></ul></li></ol><h2 id="二、选择器"><a href="#二、选择器" class="headerlink" title="二、选择器"></a>二、选择器</h2><ol><li><p>类选择器</p><ul><li>标签中采用 <code>class="类名"</code></li><li>使用时候<code>.类名</code>即可选择该类 </li></ul></li><li><p>多类名选择器</p><ul><li>一个标签可以引用多个类</li></ul></li><li><p>ID选择器</p><ul><li>标签中采用<code>id=“id名称”</code>进行引用</li><li>使用<code>#id名称</code>进行申明</li></ul></li><li><p>类选择器和ID选择器的区别：类选择器可以重复使用，类似于人名，ID选择器只可使用一次。类似于身份证号。</p></li><li><p>通配符选择器：</p><ul><li><code>*</code>代表所有选择器</li></ul></li><li><p>伪类选择器：</p><ul><li><p>为了向某些选择器添加特殊效果</p></li><li><p>链接伪类选择器：</p><ul><li> :link  未访问的链接</li><li> :visited 已经访问的链接</li><li>:hover  鼠标移动到连接上</li><li>:active 选中的链接</li><li>注：在编写代码时同一个链接元素的状态设置必须按照以上伪类顺序进行。</li></ul></li><li><p>结构（位置）伪类选择器 （CSS3）</p><ul><li><p>:first-child 选择属于其父元素的首个子元素的指定选择器</p></li><li><p>:last-child  选择属于其父元素的最后一个子元素的指定选择器</p></li><li><p>:nth-child(n)  匹配其父元素的第N个子元素，不论元素的类型, <code>even</code>表示选择位置为奇数的孩子标签，<code>odd</code>表示选择位置为偶数的孩子标签。也可使用公式</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">       <span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">3</span>n)</span><br><span class="line">{</span><br><span class="line"> <span class="attribute">background</span>: orange;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure></li><li><p>:nth-last-child(n)  选择器匹配属于其元素的第N个子元素的每个元素，不论元素的类型，从最后一个元素开始计数。</p><figure class="highlight css"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">      <span class="selector-tag">li</span><span class="selector-pseudo">:first</span>-child{</span><br><span class="line"> <span class="attribute">background</span>: green;</span><br><span class="line">}</span><br><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span>{</span><br><span class="line"> <span class="attribute">background</span>: pink;</span><br><span class="line">}</span><br><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:nth-last-child</span>(<span class="number">2</span>)</span><br><span class="line">{</span><br><span class="line"> <span class="attribute">background</span>: skyblue;</span><br><span class="line">}</span><br><span class="line"><span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>)</span><br><span class="line">{</span><br><span class="line"> <span class="attribute">background</span>: orange;</span><br><span class="line">}</span><br></pre></td></tr></tbody></table></figure><p><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/CSS%2Fstruct.png" alt="样式效果"></p></li></ul></li><li><p>目标伪类选择器</p><ul><li>:target目标伪类选择器可用于选择当前活动的目标元素。</li></ul></li></ul></li></ol><h2 id="三、CSS外观属性"><a href="#三、CSS外观属性" class="headerlink" title="三、CSS外观属性"></a>三、CSS外观属性</h2><ol><li><p>color:颜色（用于定义文本的颜色，其取值方式有如下3种:）</p><ul><li>预定义的颜色值，如red , green , blue等。</li><li>十六进制，如#FFO000，#FF6600，#29D794等。十六进制是最常用的定义颜色的方</li><li>RGB代码，如红色可以表示为rgb(255,0,0)或rgb(100%,0%,0%)</li><li>也可使用rgba设置颜色并调整透明度rgba(255,255,0,0.6),表示透明度为60%</li></ul></li><li><p>line-height:行间距离</p><ul><li>行与行之间的距离，即为字符的垂直间距，一般为行高。行间距一般比字号多7~8个像素就主够</li></ul></li><li><p>text-align:水平对齐方式</p><ul><li>left:内容左对齐</li><li>right：内同右对齐</li><li>center：内容居中对齐</li></ul></li><li><p>text-indent:首行缩进</p><ul><li>用于设置首行文本的缩进，其属性值可以为不同单位的数值、em字符宽度的倍数、或者对于浏览器窗口宽度的百分比%，允许负值，建议使用em作为设置单位。</li></ul></li><li><p>letter-spacing:字间距</p><ul><li>针对于中文，英文无效 </li></ul></li><li><p>word-spacing :单词间距</p><ul><li>针对于英文，中文无效</li></ul></li><li><p>text-shadow:文字阴影</p><ul><li>text-shadow: 水平位置 垂直位置 模糊距离 阴影颜色</li><li>h-shadow: <code>必选</code>,水平阴影的位置</li><li>v-shadow: <code>必选</code>，垂直阴影的位置</li><li>blur: 可选，阴影的距离</li><li>color: 可选，阴影的颜色</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端学习 </tag>
            
            <tag> Css </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DNS域名解析</title>
      <link href="/2022/03/14/DNS%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/"/>
      <url>/2022/03/14/DNS%E5%9F%9F%E5%90%8D%E8%A7%A3%E6%9E%90/</url>
      
        <content type="html"><![CDATA[<h1 id="DNS域名解析服务"><a href="#DNS域名解析服务" class="headerlink" title="DNS域名解析服务"></a>DNS域名解析服务</h1><h2 id="一、DNs服务概述"><a href="#一、DNs服务概述" class="headerlink" title="一、DNs服务概述"></a>一、DNs服务概述</h2><ol><li>DNS(Domain Name System)域名系统，在TCP/IP 网络中有非常重要的地位，能够提供域名与IP地址的解析服务。</li><li>DNS是一个分布式数据库，命名系统采用层次逻辑结构，如同一棵倒置的树，这个逻辑的树状结构称为域名空间。    - 由于DNS划分了域名空间，所以各机构可以使用自己的域名空间来创建DNS信息    - DNS域名空间中，树的最大深度不超过127层，数的每个结点的最大长度可存储63个字符</li><li>DNS根域下面是顶级域，也是Internet域名注册授权机构管理，共有3种类型的顶级域。<ul><li>组织域：采用三个字符代号，表示DNS域中所包含的组织的主要功能或活动<ul><li>.com为商业机构组织</li><li>.edu为教育机构组织</li><li>.gov为政府机构组织</li><li>.mil为军事机构组织</li></ul></li><li>地址域：采用两个字符的国家或地区代号<ul><li>cn为中国</li><li>kr为韩国</li><li>us为美国</li></ul></li><li>单向域 ：这是一个特殊域，名字为in-addr.arpa，用于将IP地址映射到名字（反向查询）</li></ul></li><li>区（Zone）,资源记录<ul><li>区是DNS名称空间的一部分，其包含了一组存储在DNS服务器上的资源记录。</li><li>使用区的概念，DNS服务器回答关于自己区中主机的查询，每个区都有自己的授权服务器</li></ul></li><li>主域名服务器和辅助域名服务器<ul><li>当区的域名服务器启动时，它与该区的主控服务器进行连接并启动一次区传输，区辅助服务器定期与区主控制服务器通信，查看区数据是否改变。如果改变了，它就启动一次数据更新传输。</li><li>每个区必须有主服务器，另外每个区至少有一台辅组服务器，否则如果该区的主服务器崩溃了，就无法解析该区的名称。</li></ul></li><li>辅助服务器的优点：<ul><li><code>容错能力</code>：配置辅助服务器后，在该区主服务器崩溃的情况下客户仍能解析该区的名称。一般把主区的主服务器和区的辅助服务器安装在不同的子网上。</li><li><code>减少广域网链路的通信量</code>：如果某个去在远程有大量客户机，用户就可以在远程添加该区域的辅助服务器，并把远程的客户机配置成先查询这些服务器，这样就能防止远程客户机通过慢速链路通信来进行DNS查询。</li><li><code>减轻主服务器的负载</code>：辅助服务器能回答该区的查询，从而减少该区主服务器必须回答的查询次数。</li></ul></li></ol><h2 id="二、关于DNS的基本概念"><a href="#二、关于DNS的基本概念" class="headerlink" title="二、关于DNS的基本概念"></a>二、关于DNS的基本概念</h2><ol><li> <code>DNS服务器</code>：服务器程序的计算机，存储DNS数据信息。DNS服务器会尝试解析客户机的查询请求。</li><li><code>DNS缓存</code>： DNS服务器在解析客户请求时，如果本地没有该DNS 信息，则可以查询其他DNS服务器，当其他域名服务器返回查询结果时，该DNS服务器会将结果记录在本地缓存中，称为DNS缓存。当下一次客户机提交相同请求时，DNS服务器能够直接使用缓存中的DNS信息进行解析。</li><li><code>DNS查询方式</code>：递归查询和迭代查询 <ul><li>递归查询：一次沟通完。递归查询是一种DNS服务器的查询模式，在该模式下DNS服务器接收到客户机请求，必须使用一个准确的查询结果回复客户机。如果DNS服务器本地没有存储查询DNS信息，那么该服务器会询问其他服务器，并将返回的查询结果提交给客户机。</li><li>迭代查询：当客户机发送查询请求时，DNS服务器并不直接回复查询结果，而是告诉客户机另一台DNS服务器地址，客户机再向这台DNS服务器提交请求，依次循环直到返回查询的结果为止。</li><li>注释：一般情况下，从PC客户端到本地DNS服务器是属于递归查询。而DNS服务器之间的交互查询称为迭代。</li></ul></li><li>正向解析与反向解析<ul><li>正向解析：域名到IP地址1解析过程。</li><li>反向解析：从IP地址到域名的解析过程，反向解析的作用为服务器的身份验证。</li></ul></li></ol><h2 id="三、资源记录"><a href="#三、资源记录" class="headerlink" title="三、资源记录"></a>三、资源记录</h2><ol><li>SOA 资源记录<ul><li>每个区在区的开始处都包含了一个起始授权记录(Start of Authority Record)，称为SOA记录。</li><li>SOA记录定义了域的全局参数，进行整个域的管理配置。一个区域文件只允许存唯一的SOA记录。</li></ul></li><li>NS 资源记录<ul><li>NS(Name Server) 记录是域名服务器记录，用来指定该域名由哪个DNS服务器来进行解析。</li><li>每个区在区根处直到包含一个NS 记录</li></ul></li><li>A 资源记录<ul><li>地址(A)资源记录把FQDN映射到IP地址。因为有此记录，所以DNS服务器能解析FQDN域名对应的IP地址。</li></ul></li><li>PTR 资源记录<ul><li>相对于A资源记录，针对（PTR）记录把IP记录地址映射到FQDN。用于反向查询，通过IP地址找到域名。</li></ul></li><li>CNAME 资源记录<ul><li>别名记录（CNAME）资源记录创建特定FQDN的别名。用户可以使用CNAME记录来隐藏用户网络的实现细节，使连接的客户机无法直到真正的域名。</li></ul></li><li>MX 资源记录<ul><li>邮件交换（MX）资源记录，为DNS域名指定邮件交换服务。</li></ul></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
            <tag> DNS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github基础使用</title>
      <link href="/2022/03/08/github%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/"/>
      <url>/2022/03/08/github%E5%9F%BA%E7%A1%80%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="github仓库使用"><a href="#github仓库使用" class="headerlink" title="github仓库使用"></a>github仓库使用</h1><h2 id="一、仓库建立"><a href="#一、仓库建立" class="headerlink" title="一、仓库建立"></a>一、仓库建立</h2><ol><li><p>在登录后进入仓库创建界面，填写仓库名称和描述即可创建仓库<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2Fgithub.png" alt="创建仓库"></p></li><li><p>仓库主页的功能介绍</p><ul><li>修改项目介绍，点击edit</li><li>查看仓库名称，一般情况仓库名称即为项目名称</li><li><code>Create new file</code>创建文件、<code>upload files</code>上传文件、<code>Find file</code>搜索仓库文件</li><li><code>Clone or Download</code>直接下载或通过github克隆</li><li>点击事务卡片<code>issu</code>可以新建issu,在发现代码bug,但是目前没有成型代码需要讨论时使用。<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2Fgithub2.png" alt="项目界面"></li></ul></li></ol><h2 id="二、仓库管理"><a href="#二、仓库管理" class="headerlink" title="二、仓库管理"></a>二、仓库管理</h2><ol><li><p>新建文件</p><ul><li>点击<code>create new file</code>新建文件</li><li>进入后填写文件名称和文件内容</li><li>填写每次提交的目的和描述，为了方便其他开发者知道本次添加或修改的原因</li><li>点击<code>Commit new file</code> 即可提交</li></ul></li><li><p>编辑文件</p><ul><li>点击<code>文件名</code>到文件详情页可以做删除和修改动作</li><li>点击<code>文件描述</code>可以查看该文件提交的详细信息</li><li>点击<code>修改</code>符号进行修改文件</li><li>填写修改的目的和具体描述</li><li>点击<code>Commit new file</code> 即可提交</li></ul></li><li><p>删除文件</p><ul><li>点击<code>文件名</code>进入文件详情页</li><li>点击<code>删除</code>按钮删除文件</li><li>填写修改的目的和具体描述</li><li>点击<code>Commit new file</code> 即可提交</li><li>删除后可点击<code>commits</code>查看已经删除的文件</li></ul></li><li><p>上传文件</p><ul><li>点击<code>upload files</code>即可选择上传文件</li><li>填写修改的目的和具体描述</li><li>点击<code>Commit new file</code> 即可提交  </li></ul></li><li><p>搜索仓库文件</p><ul><li>点击<code>Go to file</code>可以搜索文件</li><li>同时支持快捷键（t/T）</li></ul></li></ol><h2 id="三、Github-issues"><a href="#三、Github-issues" class="headerlink" title="三、Github issues"></a>三、Github issues</h2><ol><li>作用：发现代码bug，但是目前没有成型代码，需要讨论时用；或者使用开源项目出现问题时使用。</li><li>提出方与代码拥有着均有关闭issue的权限</li><li>pull request<ul><li>fork项目</li><li>修改自己仓库的项目代码</li><li>新建pull request</li><li>等待作者审核并合并修改</li></ul></li></ol><h2 id="四、github-从本地上传文件"><a href="#四、github-从本地上传文件" class="headerlink" title="四、github 从本地上传文件"></a>四、github 从本地上传文件</h2><ol><li>上传文件到主分支，<figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">git init //初始化仓库</span><br><span class="line">git add . //添加文件到本地仓库</span><br><span class="line">git branch -M main //选择main分支，可以改名上传其它分支</span><br><span class="line">git commit -m "first commit" //添加文件描述信息</span><br><span class="line">git remote add origin https://github.com/xxx/xxxx.git //链接远程仓库，创建主分支</span><br><span class="line">git pull origin main // 把本地仓库的变化连接到远程仓库主分支</span><br><span class="line">git push -u origin main //此处上传的是main分支</span><br></pre></td></tr></tbody></table></figure></li><li>若上传失败，可以使用强制上传，上传后会完全覆盖代码，谨慎使用<figure class="highlight shell"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push -f origin main //强制push就成功了。</span><br></pre></td></tr></tbody></table></figure></li></ol><h2 id="五、Git安装使用"><a href="#五、Git安装使用" class="headerlink" title="五、Git安装使用"></a>五、Git安装使用</h2><ol><li>下载并安装<ul><li>下载Git: <a href="https://www.git-scm.com/download/win">https://www.git-scm.com/download/win</a></li><li>点击安装</li></ul></li><li>Git工作区域<ul><li>工作区（Working Directory）、暂存区、Git仓库（Git Repsitory）<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2Fgit.png" alt="Git工作区域示意图"></li></ul></li><li>命令行控制<ul><li><code>git status</code> 查看当前文件的状况</li><li><code>git add</code> 将文件从工作区提交到暂存区</li><li><code>git commit -m "提交描述"</code> 填写描述，文件从暂存区提交到本地仓库</li><li><code>git push</code> 将本地仓库文件提交到远程仓库</li><li><code>git init</code> 初始化仓库</li><li><code>git config  --global user.name 'username' </code> 初始化填写用户名</li><li><code>git config  --global user.email 'email@qq.com'</code> 初始化填写邮箱 这会用于github主页显示提交用户</li><li><code>git clone 仓库地址</code> 从远程仓库克隆到本地</li><li><code>git config --list</code> 检查自己的设置</li></ul></li></ol><h2 id="六、利用github搭建个人网站"><a href="#六、利用github搭建个人网站" class="headerlink" title="六、利用github搭建个人网站"></a>六、利用github搭建个人网站</h2><ol><li>访问https://个人用户名.github.io</li><li>搭建个人网站步骤<ul><li> 创建个人站点</li><li>新建仓库（仓库名必须是【用户名.github.io】）</li><li>在仓库下新建index.html文件即为网站主页</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> github </tag>
            
            <tag> 学习笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>了解浏览器</title>
      <link href="/2022/03/07/%E4%BA%86%E8%A7%A3%E6%B5%8F%E8%A7%88%E5%99%A8/"/>
      <url>/2022/03/07/%E4%BA%86%E8%A7%A3%E6%B5%8F%E8%A7%88%E5%99%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="了解浏览器"><a href="#了解浏览器" class="headerlink" title="了解浏览器"></a>了解浏览器</h1><h2 id="一、浏览器的Layout-Tree和DOM-Tree"><a href="#一、浏览器的Layout-Tree和DOM-Tree" class="headerlink" title="一、浏览器的Layout Tree和DOM Tree"></a>一、浏览器的Layout Tree和DOM Tree</h2><ol><li>layout布局阶段：主线程通过遍历DOM 和计算好的样式来生成Layout Tree。</li><li>Layout Tree 上的每个结点都记录了x,y坐标和边框尺寸。</li><li>DOM Tree和Layout Tree并不是一一对应的，使用伪类控制的元素不会出现在DOM Tree结点中，只会出现在Layout Tree 结点中。这也是JS无法控制伪类的原因。设置了display:none的元素不会出现在Layout Tree中，只会出现在DOM Tree中。</li><li>Layout Tree和最后显示在屏幕上的结点是一致的</li></ol><h2 id="二、浏览器渲染流程"><a href="#二、浏览器渲染流程" class="headerlink" title="二、浏览器渲染流程"></a>二、浏览器渲染流程</h2><ol><li>主线程，合成线程，栅格线程<ul><li>主线程：DOM，style,layout,paint,layer</li><li>合成器线程：tiles ,   frame</li><li>栅格线程：raster, draw quads</li></ul></li><li>重排和重绘</li><li>布局绘制和JS都是在主线程运行的，当在一的时间内布局和绘制结束后还有剩余时间，JS就可以获得主线程控制权，若JS执行时间过长会导致没有及时归还主线程，主线程无法及时渲染下一帧动画，从而造成页面卡顿。<ul><li>优化动画：<code>requestAnimationFrame()</code> ,这个方法会在每一帧被调用。把JS运行任务分成更小的任务快，在每一帧的时间用完前暂停JS执行，归还主线程。在下一帧开始时主线程就可以按时执行布局和绘制。</li><li>Transform实现的动画不会经过布局和绘制，而是直接运行在合成器线程和栅格化线程中。</li></ul></li></ol><h2 id="三、持续补充中……"><a href="#三、持续补充中……" class="headerlink" title="三、持续补充中……"></a>三、持续补充中……</h2>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 浏览器 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>HTTP协议</title>
      <link href="/2022/03/06/HTTP%E5%8D%8F%E8%AE%AE/"/>
      <url>/2022/03/06/HTTP%E5%8D%8F%E8%AE%AE/</url>
      
        <content type="html"><![CDATA[<h1 id="HTTP协议详解"><a href="#HTTP协议详解" class="headerlink" title="HTTP协议详解"></a>HTTP协议详解</h1><h2 id="一、形象理解HTTP协议"><a href="#一、形象理解HTTP协议" class="headerlink" title="一、形象理解HTTP协议"></a>一、形象理解HTTP协议</h2><ol><li><p>什么是HTTP协议：HTTP协议即按一定规则，向服务器要数据，或发送数据。而服务器则按一定规则回应数据。</p></li><li><p>HTTP协议的工作流程</p><ul><li>原始状态客户端与服务器没有关系</li><li>建立连接，发送请求</li><li>沿着连接，返回响应信息</li><li>断开连接，两者再次没有关系</li></ul></li><li><p>HTTP请求信息和响应信息的格式</p><ul><li>请求：请求行、请求头信息、请求主体信息<ul><li>请求行：请求方法、请求路径、所用协议<ul><li>请求方法：GET、POST、HEAD、PUT、DELETE、TRACE、OPTIONS</li><li>请求路径：URL的一部分</li><li>所用协议版本：一般是HTTP/1.1</li></ul></li><li>请求头信息</li><li>请求主体信息</li></ul></li><li>响应：响应行、响应头信息、响应主体信息<ul><li>响应行： 协议版本、状态码、状态文字</li><li>响应头信息：<code>content-type</code> , <code>content-length</code>等</li><li>响应主体</li></ul></li></ul></li><li><p>请求方法虽然是HTTP协议里面规定的，但web server未必允许或支持这些方法</p><ul><li>HEAD：和GET基本一致，只是返回的内容不同。比如我们只是想要确认一个内容是否还正常存在，不需要返回内容本身，这时可以使用HEAD</li><li>TRACE：使用代理上网，比如用代理访问new.163.com,想要看看代理有没有修改HTTP 请求，可以使用TRACE来测试一下，163.com的服务器就会把最后收到的请求发送回来。</li><li>OPTIONS：返回服务器可用的请求方法</li></ul></li><li><p>状态文字与状态码</p><table><thead><tr><th align="center">状态码</th><th align="center">作用</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">1XX</td><td align="center">信息提示</td><td align="center">通告信息，可能还需要进一步交互</td></tr><tr><td align="center">2XX</td><td align="center">成功</td><td align="center">成功完成客户端请求的操作，并进行响应</td></tr><tr><td align="center">3XX</td><td align="center">重定向</td><td align="center">表示资源已移走，需要向新URL发送请求</td></tr><tr><td align="center">4XX</td><td align="center">客户端错误</td><td align="center">由于客户端请求错误，无法成功响应</td></tr><tr><td align="center">5XX</td><td align="center">服务端错误</td><td align="center">由于服务端错误，无法成功响应</td></tr></tbody></table><ul><li><p>200：服务器成功返回网页</p></li><li><p>301/2：永久/临时重定向</p></li><li><p>307：重定向中还保持原来的请求数据 （POST方法）</p></li><li><p>304 Not Modified 未修改</p></li><li><p>失败的状态码</p><ul><li>404——请求的网页不存在</li><li>503——服务器暂时不可用</li><li>500——服务器内部错误</li></ul></li></ul></li></ol><h2 id="二、HTTP协议防盗链"><a href="#二、HTTP协议防盗链" class="headerlink" title="二、HTTP协议防盗链"></a>二、HTTP协议防盗链</h2><ol><li>当在网页中引用站外的图片时，可能会遇到无法访问的情况。</li><li>在网站的统计结果统计用户从何而来</li><li>在HTTP协议中，头信息有一个重要的选项:referer<ul><li>referer：代表网页的来源即上一页的地址</li><li>如果直接在浏览器上输入网址进入则没有referer选项</li></ul></li><li>如何配置apache服务器，用于图片防盗链<ul><li>在web服务器层面，根据http协议referer头信息来判断如果来自站外，则统一重写到一个很小的防盗链提醒图片上去。<ul><li>打开apache重写模块mode_rewrite</li><li>在需要防盗链的网站或目录写.htaccess文件，并指定防盗链规则（[NC]表示不区分大小写）<figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">RewritrEngine</span> <span class="literal">On</span></span><br><span class="line"><span class="attribute"><span class="nomarkup">RewriteCond</span></span> <span class="variable">%{REQUEST_FILENAME}</span> .*\.(jpg|jpeg|gif|png)<span class="meta"> [NC]   </span></span><br><span class="line"><span class="meta">RewriteCond %{HTTP_REFERER} !loaclhost [NC]</span></span><br><span class="line"><span class="attribute"><span class="nomarkup">RewriteRule</span></span> .*  nofound.png  // 此处添加防盗链图片地址</span><br></pre></td></tr></tbody></table></figure></li><li>指定：分析referer信息，如果不是来自本站则重写</li><li>重写规则：是jpeg,jpg,gif,png图片时，referer头与localhost不匹配时重写</li><li>怎么重写：统一rewrite到另一个防盗链图片</li></ul></li></ul></li></ol><h2 id="三、HTTP协议与缓存控制"><a href="#三、HTTP协议与缓存控制" class="headerlink" title="三、HTTP协议与缓存控制"></a>三、HTTP协议与缓存控制</h2><ol><li>http协议缓存控制：<ul><li>现象：网页图片加载时，第一次请求时 200 ok，第二次请求时 304 Not Modified 未修改状态</li><li>原因：在网络上，有一些缓存服务器，另外浏览器自身也有缓存功能。当我们第一次访问某图片时，正常的加载图片，返回值为200。基于一个前提——图片不会经常改动，服务器在返回200的同时，还返回该图片的“签名”——ETag ，（签名可以理解为图片的“指纹”），当浏览器再次访问该图片时，去服务器校验“指纹”，如果图片没有变化，直接使用缓存中的图片，这样减轻了服务器负担。</li></ul></li><li>如果网站比较大，有N台缓存级服务器，那么这N台缓存服务器，如何处理主服务器上文件<ul><li>要不要缓存</li><li>缓存多久</li><li>缓存服务器与主服务器之间，有http协议，采用cache-control来控制</li></ul></li><li>缓存服务器、<ul><li>在主服务器上，打开apache的expires扩展，利用该扩展来控制图片，css,html等文件控制是否缓存及缓存生命周期。</li><li>在.htaccess中，具体语法如下<figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attribute">ExpriesDefault</span> <span class="string">"&lt;base&gt; [plus] {&lt;num&gt; &lt;type&gt;}*"</span></span><br><span class="line"><span class="attribute">ExpriesByType</span> type/encoding <span class="string">"&lt;base&gt; [plus] {&lt;num&gt; &lt;type&gt;}*"</span></span><br></pre></td></tr></tbody></table></figure></li><li><code>ExpiresDefault</code> 是设置默认的缓存参数，<code>ExpiresByType</code> 是按照文件类型来设计独特的缓存参数</li><li>Base :基于哪个时间点来计算缓存有效期</li><li>Access/now:基于请求/响应的那一瞬间，比如从此瞬间到1个月之后</li><li>Modification：基于被请求文件的最后修改日期来计算，比如 被修改日期的一周内任然有效</li><li>Num：缓存时间的大小</li><li>Type：缓存时间的单位</li></ul></li><li>设置服务器不要有缓存信息<ul><li>比如有些个人信息不允许环迅服务器缓存，必到主服务器去请求。</li><li>Control-cache：no-store,must-revalidate ; //意味着不允许缓存，必须去主服务器验证。</li></ul></li></ol><h2 id="四、HTTP协议与内容压缩"><a href="#四、HTTP协议与内容压缩" class="headerlink" title="四、HTTP协议与内容压缩"></a>四、HTTP协议与内容压缩</h2><ol><li>Content-Length代表返回主体的长度，Content-Encoding:gzip 作用，Content-length是压缩后的长度<ul><li>为了提高网页在网络上的传输速度，服务器对主体信息进行压缩，如常见的gzip压缩，deflate压缩，compress压缩，以及google chrom的sdch压缩。</li><li>压缩的过程<ul><li>服务器返回压缩内容</li><li>客户端接收到压缩，再解压缩，最后渲染的界面</li></ul></li></ul></li><li>如何在apache服务器中启用压缩功能<ul><li>开启deflate模块，或gzip模块</li><li>在conf文件中写如下代码<figure class="highlight apache"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section">&lt;ifmodule mode_deflate.c&gt;</span></span><br><span class="line">    <span class="attribute">DeflateCompressionLevel</span> <span class="number">6</span>  #压缩级别为<span class="number">6</span>，可选<span class="number">1</span>-<span class="number">9</span>，推荐为<span class="number">6</span></span><br><span class="line">    <span class="attribute">AddOutputFilterByTyoe</span> DEFLATE text/plain  # 压缩文本文件</span><br><span class="line">    <span class="attribute">AddOutputFilterByTyoe</span> DEFLATE text/html # 压缩html文件</span><br><span class="line">    <span class="attribute">AddOutputFilterByTyoe</span> DEFLATE text/xml # 压缩xml文件</span><br><span class="line"><span class="section">&lt;/ifmodule&gt;</span></span><br></pre></td></tr></tbody></table></figure></li></ul></li><li>为什么要指定文件类型来压缩<ul><li>压缩需要耗CPU资源</li><li>图片/视频等文件，压缩效果不好</li><li>一般压缩文本格式</li></ul></li><li>服务器如何知道浏览器是否支持gzip的<ul><li>客户端允许发一个Accept-Encoding头信息与服务器协商</li></ul></li></ol><h2 id="五、分块传输与反向ajax"><a href="#五、分块传输与反向ajax" class="headerlink" title="五、分块传输与反向ajax"></a>五、分块传输与反向ajax</h2><ol><li>http协议与持久i按揭+分块传输——&gt;反向ajax<ul><li>反向ajax又叫comt，server push，服务器堆技术</li><li>应用范围：网页聊天服务器、google mail网页聊天</li><li>原理：一般而言，HTTP协议特点，连接&lt;——&gt;断开</li><li>具体断开时间：服务器响应content-length，收到指定length长度内容时断开连接</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
            <tag> http </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络08——网络安全基础</title>
      <link href="/2022/03/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C08%E2%80%94%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/03/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C08%E2%80%94%E2%80%94%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络——网络安全基础"><a href="#计算机网络——网络安全基础" class="headerlink" title="计算机网络——网络安全基础"></a>计算机网络——网络安全基础</h1><h2 id="一、网络安全概述"><a href="#一、网络安全概述" class="headerlink" title="一、网络安全概述"></a>一、网络安全概述</h2><ol><li>网络安全通信所需要的基本属性：<ul><li>机密性</li><li>消息完整性</li><li>可访问与可用性</li><li>身份认证</li></ul></li><li>网络安全威胁<ul><li>窃听</li><li>插入</li><li>假冒</li><li>劫持</li><li>拒绝服务<code>DoS</code>和分布式拒绝服务<code>DDoS</code></li><li>映射</li><li>嗅探</li><li>IP欺骗</li></ul></li></ol><h2 id="二、数据加密"><a href="#二、数据加密" class="headerlink" title="二、数据加密"></a>二、数据加密</h2><ol><li>数据加密<ul><li>明文：未加密的消息</li><li>密文：被加密的消息</li><li>伪装消息以隐藏消息的过程，即明文转变为密文的过程</li><li>解密：密文转变为明文的过程</li></ul></li><li>传统加密方式<ul><li>替代密码：用密文字母代替明文字母。移位密码加密函数： <table><tbody><tr><td bgcolor="#FF7F50">E<sub>k</sub>(M)=(M+k)mod q</td></tr></tbody></table></li><li>解密函数： <table><tbody><tr><td bgcolor="#FF7F50">D<sub>k</sub>(C)=(K+k)mod q</td></tr></tbody></table></li><li>换位密码：根据一定的规则重新排列明文</li><li>q：字母表长度， k：移动位数，M：明文所处位置。</li></ul></li><li>现代密码分类<ul><li>对称密钥加密：加密密钥和解密密钥相同（密钥保密）</li><li>非对称密钥加密：加密密钥和解密密钥不同（公钥和私钥）</li></ul></li><li>对称密钥密码分类：<ul><li>分组密码：DES、AES、IDEA等<ul><li>DES：56位密钥，54位分组</li><li>三重DES：使用两个密钥（共112位），执行三次DES算法</li><li>AES：分组128位，密匙128/192/256位</li><li>IDEA：分组64位，密钥128位</li></ul></li><li>流密码</li></ul></li><li>非对称/公开密钥加密<ul><li>密钥成对使用，其中一个用于加密，另一个用于解密，且加密密钥可以公开，也称公开密钥加密。</li><li>典型的公钥算法：Diffe-Hellman算法、RSA算法<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2Frsa.png" alt="RSA算法"></li></ul></li></ol><h2 id="三、-消息完整性与数据签名"><a href="#三、-消息完整性与数据签名" class="headerlink" title="三、 消息完整性与数据签名"></a>三、 消息完整性与数据签名</h2><ol><li>消息完整性检测方法<ul><li>密码散列函数<ul><li>特性：定向输出、单向性（无法根据散列值逆推报文）、抗碰撞性（无法找到具有相同散列值的两个报文）</li><li>典型散列函数：<code>MD5</code>:128位散列值，<code>SHA-1</code>:160位散列值</li></ul></li></ul></li><li>报文认证<ul><li>报文认证是使消息的接收者能够检验收到的消息是否是真是的认证方法。来源真是、未被篡改。</li><li>报文摘要（数字指纹）</li><li>报文认证方法：<ul><li>简报报文验证：仅使用报文摘要，无法验证来源真实性</li><li>报文认证码：使用共享认证密匙，但无法防止接收方篡改</li></ul></li></ul></li><li>数字签名<ul><li>身份认证、数据完整性、不可否认性</li><li>简单数字签名：直接对报文签名</li><li>签名报文摘要</li></ul></li></ol><h2 id="四、身份认证"><a href="#四、身份认证" class="headerlink" title="四、身份认证"></a>四、身份认证</h2><ol><li>身份认证<ul><li>口令：会被窃听</li><li>加密口令：可能遭受回放（重放）攻击</li><li>加密一次性随机数：可能遭受中间人攻击</li></ul></li></ol><h2 id="五、密钥分发中心与证书认证"><a href="#五、密钥分发中心与证书认证" class="headerlink" title="五、密钥分发中心与证书认证"></a>五、密钥分发中心与证书认证</h2><ol><li>密钥分发中心<ul><li>基于KDC的密钥生成和分发<ul><li>通信发起方生成密钥，KDC进行分发</li><li>KDC生成并分发密钥</li></ul></li></ul></li><li>证书认证机构<ul><li>认证中心CA：将公钥与特定的实体绑定<ul><li>认证一个实体的真实身份</li><li>为实体颁发数字证书（实体身份和公钥绑定）</li></ul></li></ul></li></ol><h2 id="六、防火墙与入侵检测系统"><a href="#六、防火墙与入侵检测系统" class="headerlink" title="六、防火墙与入侵检测系统"></a>六、防火墙与入侵检测系统</h2><ol><li>防火墙的基本概念<ul><li>防火墙：能够隔离组织内部网络与公共互联网，允许某些分组通过，而阻止其他分组进入或离开内部网络的软件、硬件或者软件硬件结合的一种措施。</li><li>前提：从外部到内部和从内部到外部的所有流量都经过防火墙</li></ul></li><li>防火墙分类<ul><li>无状态分组过滤器：基于特定的规则对分组是通过还是丢弃进行决策。使用访问控制列表（ACL）实现防火墙规则。</li><li>有状态分组过滤器：跟踪每个TCP建立连接、拆除，根据状态确定是否允许分组通过。</li><li>应用网关：鉴别用户身份或针对授权用户开放特定服务。</li></ul></li><li>入侵检测系统IDS<ul><li>入侵检测系统（IDS）是当观察到潜在的恶意流量时，能够产生警告的设备或系统。</li></ul></li></ol><h2 id="七、网络安全协议"><a href="#七、网络安全协议" class="headerlink" title="七、网络安全协议"></a>七、网络安全协议</h2><ol><li>安全电子邮件<ul><li>电子邮件安全需求<ul><li>机密性</li><li>完整性</li><li>身份认证性</li><li>抗抵赖性</li></ul></li><li>安全电子邮件标准：<code>PGP</code></li></ul></li><li>安全套接字层SSL<ul><li>SSL是介于应用层和传输层之间的安全协议</li><li>SSL协议栈 <img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2FSSL6.png" alt="SSL协议栈"></li><li>SSL握手过程<ul><li>协商密码组</li><li>生成密钥</li><li>服务器/客户认证与鉴别</li></ul></li></ul></li><li>虚拟专用网VPN和IP安全协议IPSec<ul><li>VPN：建立在公共网络上的安全通道，实现远程用户、分支机构、业务伙伴等与机构总部网路的安全连接，从而建立针对特定组织机构的专用网路。</li><li>关键技术：隧道技术，如IPSec</li><li>典型的网路层安全协议——IPSec<ul><li>提供机密性、身份鉴别、数据完整性验证和防重放攻击服务。</li><li>体系结构：认证头AH协议、封装安全负荷ESP协议</li><li>运行模式：<code>传输模式</code>（AH传输模式、ESP传输模式）、<code>隧道模式</code>（AH隧道模式、ESP隧道模式）</li></ul></li></ul></li></ol><h2 id="本章重点"><a href="#本章重点" class="headerlink" title="本章重点"></a>本章重点</h2><ol><li>网络安全基本属性</li><li>典型数据加密算法</li><li>消息完整性、数字签名以及身份认证原理</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
            <tag> 网络安全基础 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络07——无线与移动网络</title>
      <link href="/2022/03/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C07%E2%80%94%E2%80%94%E6%97%A0%E7%BA%BF%E4%B8%8E%E7%A7%BB%E5%8A%A8%E7%BD%91%E7%BB%9C/"/>
      <url>/2022/03/05/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C07%E2%80%94%E2%80%94%E6%97%A0%E7%BA%BF%E4%B8%8E%E7%A7%BB%E5%8A%A8%E7%BD%91%E7%BB%9C/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络——无线与移动网络"><a href="#计算机网络——无线与移动网络" class="headerlink" title="计算机网络——无线与移动网络"></a>计算机网络——无线与移动网络</h1><h2 id="一、无线网络"><a href="#一、无线网络" class="headerlink" title="一、无线网络"></a>一、无线网络</h2><ol><li>无线网络基本结构<ul><li>无线主机</li><li>无线链路</li><li><code>基站</code></li><li>网路基础设施</li><li>自组织网络（Ad Hoc网络）</li></ul></li><li>无线链路与无线网络特征<ul><li>无线链路与有线链路的区别<ul><li>信号强度衰减</li><li>干扰</li><li>多径传播</li><li>隐藏终端</li></ul></li></ul></li></ol><h2 id="二、-移动网络"><a href="#二、-移动网络" class="headerlink" title="二、 移动网络"></a>二、 移动网络</h2><ol><li><p>移动网络的基本原理</p><ul><li>不同的移动性需求</li><li>网络层地址保持不变的重要性</li><li>有线基础设施的支持</li></ul></li><li><p>寻址</p><ul><li>永久地址和转交地址<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2Fxunzhi.png" alt="永久地址和转交地址"></li></ul></li><li><p>移动结点的路由选择</p><ul><li>间接路由选择：由归属代理转发数据给外部地址</li><li>直接路由选择：由通信代理通过归属代理获得转交地址，直接发送到外部代理</li></ul></li></ol><h2 id="三、无线局域网IEEE-802-11"><a href="#三、无线局域网IEEE-802-11" class="headerlink" title="三、无线局域网IEEE 802.11"></a>三、无线局域网IEEE 802.11</h2><ol><li><p>IEEE 802.11体系结构</p><ul><li>基站AP</li><li>基本服务集BSS——AP发现：<ul><li>主动扫描探测帧</li><li>被动扫描信标帧</li></ul></li></ul></li><li><p>IEEE 802.11的MAC协议</p><ul><li>CSMA/CA——带碰撞避免的CSMA:CSMA/AC通过RTS和CTS帧交换，可以实现信道的预约占用，避免数据帧传输过程中的冲突。<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2FIEEE%20802.png" alt="带碰撞避免的CSMA3    t"></li></ul></li><li><p>IEEE 802.11帧</p><ul><li>IEEE 802.11的帧类型：控制帧、数据帧和管理帧</li><li>MAC首部：长度30字节，包括4个地址字段（主要使用目的地址、源地址、AP地址）</li></ul></li></ol><h2 id="四、蜂窝数据"><a href="#四、蜂窝数据" class="headerlink" title="四、蜂窝数据"></a>四、蜂窝数据</h2><ol><li>蜂窝网络体系结构<ul><li>基站系统BSS:基站控制器、收发基站</li><li>移动交换中心MSC</li><li>网关MSC</li></ul></li><li>蜂窝网路中的移动性管路<ul><li>间接路由选择方法</li></ul></li><li>移动通信2G/3G/4G/5G网络<ul><li>2G网络：信令和语音信道都是数字式的</li><li>3G网络：无线通信与互联网等多媒体通道结合</li><li>4G网络：高效率数据业务，不同频段、不同业务环境间的无缝漫游</li><li>5G网络：超高容量、超可靠性、随时随地可接入性</li></ul></li></ol><h2 id="五、移动IP网络"><a href="#五、移动IP网络" class="headerlink" title="五、移动IP网络"></a>五、移动IP网络</h2><ol><li>代理发现<ul><li>代理通告：外部代理或归属代理使用一种现有路由器发现协议的扩展协议来通告其他服务。周期性的在所有连接的链路上广播一个类型字段为9（路由器发现）的ICMP报文。</li><li>代理请求：移动结点广播一个代理请求报文，该报文是一个类型值为10的ICMP 报文。收到该请求的代理将直接向该移动结点单播一个代理通告。</li></ul></li><li>向归属代理注册——移动结点和/或外部代理向一个移动结点的归属代理注册或注销COA所使用的协议。<ul><li>移动结点向外部代理发送一个移动IP注册报文</li><li>外部代理记录移动结点的永久IP地址，并发送注册请求给归属代理</li><li>归属代理接收注册请求并发送注册应答</li><li>外部代理接收注册应答，然后将其转发给移动结点</li></ul></li></ol><h2 id="六、其他典型无线网络简介"><a href="#六、其他典型无线网络简介" class="headerlink" title="六、其他典型无线网络简介"></a>六、其他典型无线网络简介</h2><ol><li>WinMax<ul><li>IEEE 802.16,城域网技术，传输距离更远，接入带宽更高</li></ul></li><li>蓝牙<ul><li>IEEE 802.15.1，小范围，低功率，低成本，自组织。</li></ul></li><li>ZigBee<ul><li>IEEE 802.15,4,低功率，地数据数率，低工作周期。 </li></ul></li></ol><h2 id="本章重点"><a href="#本章重点" class="headerlink" title="本章重点"></a>本章重点</h2><ol><li>无线网络基本结构</li><li>移动网络基本原理</li><li>CSMA/CA</li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
            <tag> 移动网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络06——物理层</title>
      <link href="/2022/03/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C06%E2%80%94%E2%80%94%E7%89%A9%E7%90%86%E5%B1%82/"/>
      <url>/2022/03/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C06%E2%80%94%E2%80%94%E7%89%A9%E7%90%86%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络——物理层"><a href="#计算机网络——物理层" class="headerlink" title="计算机网络——物理层"></a>计算机网络——物理层</h1><h2 id="一、数据通信基础"><a href="#一、数据通信基础" class="headerlink" title="一、数据通信基础"></a>一、数据通信基础</h2><ol><li><p>数据通信基本概念</p><ul><li>消息：人类能够感知的描述称为消息</li><li>信息：信息对事物状态或存在方式的不确定性表述，<code>信息是可以度量的</code>。</li><li>通信：本质就是在一点精确或近似地再生另一点的信息</li><li>通信系统：能够实现通信功能的各种技术、设备和方法的总体</li><li>信号：通信系统中，在传输通道中传播的<code>信息的载体</code></li><li>数据：对客观事物的性质状态以及相互关系等进行记载的<code>符号</code>及其组合</li><li>信道：信道是以传输介质为基础的信号通道</li></ul></li><li><p>数据通信系统模型</p><ul><li><p>通信系统的构成：信源、发送设备、信道、接收设备、信宿和噪声源等部分<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2Ftongxinxitong.png" alt="通信系统的构成"></p></li><li><p>模拟通信</p><ul><li>模拟信号：信号的因变量是<code>连续</code>的</li></ul></li><li><p>数字通信</p><ul><li>数字信号：信号的因变量是<code>离散</code>的</li></ul></li><li><p>数据通信方式</p><ul><li>单向通信（单工）、双向交替通信（半双工）和双向同时通信（全双工）、</li><li>并行通信和串行通信</li><li>异步通信和同步通信</li></ul></li><li><p>数据通信系统的功能：</p><ul><li>信道利用</li><li>接口及信号产生</li><li>同步</li><li>差错检测和纠正</li><li>寻址与路由</li><li>网络管理</li><li>安全保证</li></ul></li></ul></li></ol><h2 id="二、物理介质"><a href="#二、物理介质" class="headerlink" title="二、物理介质"></a>二、物理介质</h2><ol><li>导引型传输介质<ul><li>架空明线：指平行且相互分离或绝缘的架空裸线线路，通常采用铜线或铝线等金属导线</li><li>双绞线： 两根相互绝缘的铜线并排绞合在一起，减少对相邻导线的电磁干扰（屏蔽双绞线<code>STP</code>、非屏蔽双绞<code>UTP</code>线）</li><li>同轴电缆：抗电磁干扰性能好。现在主要用于频带传输，如有线电视</li><li>光纤：基本原理是利用光的全反射。通信容量达、距离远、抗电磁干扰性好、保密性好。（<code>多模光纤</code>和<code>单模光纤</code>）</li></ul></li><li>非导引型传输介质<ul><li>地波传播：低频信号，沿地球表面传播</li><li>天波传播：较高频信号，利用电离层的反射传播</li><li>视线传播：高频信号，点对点直线传播，中继传输</li></ul></li></ol><h2 id="三、信道与信道容量"><a href="#三、信道与信道容量" class="headerlink" title="三、信道与信道容量 *"></a>三、信道与信道容量 <code>*</code></h2><ol><li>信道分类与模型<ul><li>狭义信道：信号传输介质</li><li>广义信道：信号传输介质和通信系统的一些变换装置</li><li>调制信道：信号从调制器的输出端传输到解调器的输入端经过的部分</li><li>编码信道：数字信号由编码器输出端传输到译码器输入端经过的部分<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2Fxindaohuafen.png" alt="信道的划分结构"></li></ul></li><li>信道传输特性<ul><li>恒参信道：各种有线信道和部分无线信道，传输特性变化小、缓慢，如微波视线传播链路和卫星链路等。<ul><li>对信号幅值产生固定的衰减</li><li>对信号输出产生固定的时延</li></ul></li><li>随参信道：传输特性随时间随机快速变化<ul><li>信号的传输衰减随时间随机变化</li><li>信号的传输时延随时间随机变化</li><li>存在多径传播现象</li></ul></li></ul></li><li>信道容量<ul><li>信道容量：指信道无差错传输信息的最大平均信息速率</li><li>连续信道容量<ul><li>（B-带宽、M-信号码源状态数、S/N-信噪比，s-信号功率，N-噪声功率）</li><li>理想无噪声信道的通信容量，奈奎斯特公式：<table><tbody><tr><td bgcolor="#FF7F50">C=2B log<sub>2</sub>M </td></tr></tbody></table></li><li>有噪声连续通信的信道容量，香农公式：<table><tbody><tr><td bgcolor="#FF7F50">C=B log<sub>2</sub>(1+S/N) </td></tr></tbody></table> </li></ul></li><li>离散信道容量 </li></ul></li></ol><h2 id="四、基带传输"><a href="#四、基带传输" class="headerlink" title="四、基带传输"></a>四、基带传输</h2><ol><li>基带传输基本概念<ul><li>模拟基带信号：模拟信号发出的原始电信号</li><li>数字基带信号：数字信号发出的基带信号</li><li>模拟基带信号可以通过信源编码转换为数字基带信号</li><li>基带传输：直接在信道中传送基带信号</li><li>数字基带传输系统<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2Fshuzijidai.png" alt="数字基带传输系统"></li><li>信号码型：<ul><li>单极不归零码</li><li>双极不归零码</li><li>单极归零码</li><li>双极归零码</li><li>差分码</li></ul></li><li>基带传输码型：<ul><li>AMI码——信号交替反转码：零电平编码二进制信息0，二进制信息1（传号）则交替用正电平和负电平表示</li><li>双相码——曼彻斯特码：正（高）电平跳到负（低)电平表示1，负电平跳到正电平表示0</li><li>米勒码</li><li>CMI码</li><li>nBmB码</li><li>nBmT码</li></ul></li><li>注释：双相码:1（正到负），0（负到正）  差分双相码：1（起始跳变），0（起始无跳变）<code>*</code></li></ul></li></ol><h2 id="五、频带传输"><a href="#五、频带传输" class="headerlink" title="五、频带传输 *"></a>五、频带传输 <code>*</code></h2><ol><li>频带传输的基本概念：<ul><li>数字调制：利用数字基带信号控制载波信号的某些特征参数，使载波信号的这些参数的变化反应数字基带信号的信息，进而将数字基带信号变换为数字通带信号的过程</li><li>键控法：利用两种不同的<code>幅值</code>、<code>频率</code>或<code>相位</code>来分别表示0或1</li></ul></li><li>频带传输中的三种调制方式<ul><li>二进制数字调制<ul><li>二进制幅移键控：载波信号幅值随基带信号变化</li><li>二进制频移键控：随基带信号变化而选择不同频率载波信号</li><li>二进制相移键控：载波信号相位随基带信号变化</li><li>二进制差分相移键控：基带信号控制相邻码元载波相对相位是否是变化，<code>1：</code>相对相位改变 ， <code>0：</code>相对相位不变</li></ul></li><li>多进制数字调制</li><li>正交幅值调制QAM</li></ul></li></ol><h2 id="六、物理层接口规程"><a href="#六、物理层接口规程" class="headerlink" title="六、物理层接口规程"></a>六、物理层接口规程</h2><ol><li>物理层接口概述<ul><li>物理层接口的四大特性：机械特性、电气特性、功能特性、规程特性<ul><li>机械特性：通信实体间硬件连接接口的机械特点</li><li>电器特性：在物理连接上，导线的电气连接及有关电路的特征</li><li>功能特性：物理接口各条信号线的用途</li><li>规程特性： 通信协议，指明利用接口传输比特流的全过程，以及各项用于传输的事件发生的合法顺序</li></ul></li><li>物理层接口规范定义DTE和DCE之间的接口特性<ul><li>DTE：数据终端设备</li><li>DCE：数据电路端接设备</li></ul></li></ul></li></ol><h2 id="重点内容"><a href="#重点内容" class="headerlink" title="重点内容"></a>重点内容</h2><ol><li>信道容量</li><li>基带传输编码</li><li>频带传输与调制技术</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
            <tag> 物理层 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络05——数据链路层</title>
      <link href="/2022/03/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C05%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/"/>
      <url>/2022/03/03/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C05%E2%80%94%E2%80%94%E6%95%B0%E6%8D%AE%E9%93%BE%E8%B7%AF%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络——数据链路层与局域网"><a href="#计算机网络——数据链路层与局域网" class="headerlink" title="计算机网络——数据链路层与局域网"></a>计算机网络——数据链路层与局域网</h1><h2 id="一、数据链路层服务"><a href="#一、数据链路层服务" class="headerlink" title="一、数据链路层服务"></a>一、数据链路层服务</h2><ol><li>数据链路层服务<ul><li>链路：通信链路连接的相邻结点的通信信道</li><li>链路层数据单元：帧</li></ul></li><li>主要功能包括：<ul><li>组帧</li><li>链路接入：点对点链路、广播链路</li><li>可靠交付（可靠传输方法多用于高出错率链路）</li><li>差错控制</li></ul></li></ol><h2 id="二、差错控制"><a href="#二、差错控制" class="headerlink" title="二、差错控制"></a>二、差错控制</h2><ol><li><p>差错控制的四种基本方式：</p><ul><li>检查重发</li><li>前向纠错：接收方进行差错纠正</li><li>反馈校验：接收端将收到的数据原封不动发回发送端</li><li>检错丢弃</li></ul></li><li><p>差错编码的基本原理 <code>*</code></p><ul><li>香农信道编码定理：理论上可以通过编码使得数据传输过程不发生错误，或者将错误概率控制在很小的数值之下。<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2Fxiangnong.png" alt="香农信道编码执行过程"></li></ul></li><li><p>差错编码的检查与纠错能力</p><ul><li>汉明距离：两个等长码字之间，对应位不同的位数</li><li>编码集的汉明距离：该编码集中任意两个码字之间汉明距离的最小值</li><li>差错编码的检错或纠错能力与编码集的汉明距离有关<ul><li>检错编码：如果编码集的汉明距离d<sub>s</sub>=r+1，则该差错编码可以检测r位的差错</li><li>纠错编码：如果编码集的汉明距离d<sub>s</sub>=2r+1，则该差错编码可以纠正r位的差错</li></ul></li></ul></li><li><p>典型的差错编码</p><ul><li>奇偶检验码：<ul><li>奇校验：编码后的码字中“1”的个数为奇数</li><li>偶检验：编码后的码字中“1”的个数为偶数</li></ul></li><li>汉明码：可以实现单个比特差错纠正</li><li>循环冗余码CRC：检错能力强，编码效率高，实现简单 <code>*</code></li></ul></li></ol><h2 id="三、多路访问控制协议"><a href="#三、多路访问控制协议" class="headerlink" title="三、多路访问控制协议"></a>三、多路访问控制协议</h2><ol><li>信道划分MAC协议<ul><li>多路访问控制MAC：广播信道上用于协调各个结点的数据发送</li><li>信道划分MAC协议：<ul><li>频分多路复用：在频域内将信道带宽划分为多个子信道</li><li>时分多路复用：将通信信道的传输信号在时域内划分为多个等长的时隙</li><li>波分多路复用：在一根光纤中，传输多路不同波长的光信号</li><li>码分多路复用：从编码域进行划分，使得编码后的信号在同一信道中混合传输</li></ul></li></ul></li><li>随机访问MAC协议<ul><li>ALOHA协议<ul><li>纯ALOHA：直接发送——&gt;信道侦听——&gt;冲突重发</li><li>时隙ALOHA：时隙开始时发送——&gt;信道侦听——&gt;冲突则下——&gt;时隙以概率P重发</li></ul></li><li>载波监听多路访问协议CSMA，发送前监听信道是否空闲<ul><li>非坚持CSMA：忙则等待随机时间后再侦听</li><li>1-坚持CSMA：忙则持续侦听</li><li>p-坚持CSMA：闲则概率P在最近时隙发送</li></ul></li><li>带冲突检测的载波监听多路访问协议CSMA/CD<ul><li>监听空闲后发送，发送时检测碰撞，碰撞后等待重发</li></ul></li></ul></li><li>受控接入MAC协议<ul><li>集中式控制：由一个主机负责调度其他通信站接入信道，从而避免冲突。<ul><li>其主要方法：轮询技术，又分为轮叫轮询和传递轮询</li></ul></li><li>分散式控制： 典型方法有令牌技术，如令牌环网</li></ul></li></ol><h2 id="四、局域网"><a href="#四、局域网" class="headerlink" title="四、局域网"></a>四、局域网</h2><ol><li>数据链路层寻址与ARP<ul><li>MAC地址：每个接口对应一个MAC地址，且全球唯一，长度48位。</li><li>地址解析协议（ARP）：根据本网内目的主机或默认网关的IP地址获取其MAC地址。查询/响应的方式。</li></ul></li><li>以太网<ul><li><code>IEEE802.3</code>标准</li><li>采用<code>CSMA/CD</code>访问控制方法 <code>*</code></li><li>以太网技术<ul><li>10Base-5，10Base-T</li><li>快速以太网100Base-TX,100Base-T4，100Base-FX</li><li>千兆以太网</li><li>万兆以太网 </li></ul></li></ul></li><li>交换机<ul><li>转发与过滤：可以依据接收道的链路层帧的目的MAC地址，选择性地转发到相应的端口，以目的MAC地址为主键，查找交换表。</li><li>自学习：交换机通过<code>自学习</code>构建交换表</li><li>优点：<ul><li>消除冲突，提高性能</li><li>支持异质链路</li><li>易于进行网络管理</li></ul></li></ul></li><li>虚拟局域网（VLAN）<ul><li>一种基于交换机（支持VLAM功能）的逻辑分割广播域的局域网应用形式</li><li>不受物理位置的限制，以软件的方式划分和管理局域网中的工作组</li><li>能够抑制<code>广播风暴</code></li><li>划分方法：<ul><li>基于交换机端口</li><li>基于MAC地址</li><li>基于上层协议类型或地址</li></ul></li></ul></li></ol><h2 id="五、点对点链路协议"><a href="#五、点对点链路协议" class="headerlink" title="五、点对点链路协议"></a>五、点对点链路协议</h2><ol><li>点对点协议——PPP<ul><li>能够处理差错检测、支持多种上层协议、允许连接时协商IP地址、允许身份认证</li><li>典型应用：拨号上网</li><li>功能：<ul><li>成帧</li><li>链路控制协议<code>LCP</code></li><li>网络控制协议<code>NCP</code></li></ul></li></ul></li><li>高级数据链路控制——HDLC协议<ul><li>可应用于点对点链路和点对多点链路</li><li>帧定界：帧定界符是01111110<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2Fzhendingjie.png" alt="帧定界"></li><li>位填充：（透明传输）<ul><li>发送端：只要发现数据字段5个连续的1，就立即插入一个0，保证数据字段不会出现连续的6个1</li><li>接收端：发现数据流中5个连续的1，就删除其后的0，还原成原来的信息</li></ul></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络04——网络层</title>
      <link href="/2022/03/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C04%E2%80%94%E2%80%94%E7%BD%91%E7%BB%9C%E5%B1%82/"/>
      <url>/2022/03/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C04%E2%80%94%E2%80%94%E7%BD%91%E7%BB%9C%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络——网络层"><a href="#计算机网络——网络层" class="headerlink" title="计算机网络——网络层"></a>计算机网络——网络层</h1><h2 id="一、网络层服务"><a href="#一、网络层服务" class="headerlink" title="一、网络层服务"></a>一、网络层服务</h2><ol><li>网络层的主要作用：将网络层数据报从<code>源主机</code>送达<code>目的主机</code>。</li><li>主要功能包括：<ul><li>转发：分组从输入接口转移到输出接口。</li><li>路由选择：决定分组经过的路由或路径。</li></ul></li><li>路由选择，分组转发<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2Fdatachange.jpg" alt="路由选择，分组转发示意图"></li></ol><h2 id="二、数据报网络与虚电路网络"><a href="#二、数据报网络与虚电路网络" class="headerlink" title="二、数据报网络与虚电路网络"></a>二、数据报网络与虚电路网络</h2><ol><li>数据报网络：按照目的主机地址进行路由选择网络。</li><li>数据报网络特点：（不可靠）<ul><li>无连接</li><li>每个分组作为一个独立的数据报进行发送，路径路径也可能不同</li><li>分组可能出现乱序和丢失</li></ul></li><li>虚拟电路网络：在网络层提供面向连接的分组交换服务</li><li>虚电路网络的特点：<ul><li>建立一条网络逻辑链接</li><li>不需要为每条虚电路分配独享资源（区别于电路交换）</li><li>根据虚拟电路号沿虚电路路径按序发送分组</li></ul></li></ol><h2 id="三、网络互联与网络互联设备"><a href="#三、网络互联与网络互联设备" class="headerlink" title="三、网络互联与网络互联设备"></a>三、网络互联与网络互联设备</h2><ol><li>异构网络互连<ul><li>异构网络：两个网络的通信技术和运行的协议不同。</li><li>异构网络连接的基本策略：<ul><li>协议交换</li><li>构建虚拟互联网络</li></ul></li></ul></li><li>路由器<ul><li>输入端口<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2Fluyouqichu.png" alt="路由器输入端口"></li><li>输出端口<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2Fluyouqicru.png" alt="路由器输出端口"></li><li>路由结构：基于内存交换、基于总线交换、基于网络交换</li><li>路由处理器：执行路由器的各种命令，包括<code>路由协议运行</code>、<code>路由计算</code>以及<code>路由表的更新和维护</code>等。</li></ul></li></ol><h2 id="四、网络层拥塞控制"><a href="#四、网络层拥塞控制" class="headerlink" title="四、网络层拥塞控制"></a>四、网络层拥塞控制</h2><ol><li>拥塞的定义：一种持久过载的网络状态，此时用户对网络资源（包括链路带宽、存储空间和处理器处理能力等）的总需求超过了网络固有的容量。</li><li>网络拥塞的原因：<ul><li>缓冲区容量有限；</li><li>传输线路的带宽有限；</li><li>网络结点的处理能力有限；</li><li>网络中某些部分发生故障 ；</li></ul></li><li>流量感知路由<ul><li>流量感知路由： 根据网络的负载情况动态调整，将网络流量引导到不同的链路上，均衡网络负载，从而延缓或避免拥塞发生。</li><li>解决网络负载的震荡现象<ul><li>多路径路由</li><li><code>缓慢转移</code>流量至另一条链路</li></ul></li></ul></li><li>准入控制<ul><li>准入控制：是一种广泛用于虚电路网络的拥塞预防技术。</li><li>基本思想：对新建虚电路进行审核，如果新建立的虚电路会导致网络变得拥塞，那么网路拒绝建立该新虚电路。</li><li>拥塞状况的量化：基于平均流量和瞬时流量</li></ul></li><li>流量调节<ul><li>感知拥塞</li><li>处理拥塞：将拥塞信息通知到其上游结点</li><li>处理放法：<ul><li>抑制分组：给拥塞数据的<code>源主机</code>返回一个抑制分组。</li><li>背压：让抑制分组在从拥塞结点到源结点的路径的<code>每一跳</code>，都能发挥抑制作用。</li></ul></li></ul></li><li>负载脱落<ul><li>负载脱落：路由器主动丢弃某些数据报。</li><li>如何选择丢弃数据报：<ul><li>丢弃新分组：如GBN</li><li>丢弃老分组： 如实时视频流</li></ul></li></ul></li></ol><h2 id="五、Internet网络层"><a href="#五、Internet网络层" class="headerlink" title="五、Internet网络层 *"></a>五、Internet网络层 <code>*</code></h2><ol><li>IPv4协议<ul><li>IP数据报格式,IP首部固定部分20字节<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2FIPv4.png" alt="IP数据报格式示意图"></li><li>IP数据分片<ul><li>标识：判断这些分片是否属于同一个IP数据报</li><li>标志：判断是否为最后一个分片</li><li>片偏移：判断各分片的先后顺序    2. IPv4编址</li></ul></li><li>IPv4地址长度：32位二进制</li><li>点分十进制标记法<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2Fluyouqicru.png" alt="点分十进制标记法"> </li><li>分类地址：A、B、C、D、E五类  （网络号，主机号）</li><li>特殊地址、私有地址<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2FABC.png" alt="地址分类"></li><li><code>子网划分</code>:将一个较大的子网划分为对个较小的网络的过程，较大子网具有较短的网络前缀，较小子网具有稍长的前缀。</li><li><code>超网</code>：将具有较小前缀的相对较小的子网合并为一个具有稍短前缀的相对较大的子网。</li><li><code>子网掩码</code>：用来定义一个子网的网络前缀长度。<ul><li>子网掩码延长1（r）位，该子网将被划分位两个（2<sup>r</sup>个）子网</li></ul></li><li>分组转发：查找转发表，最长前缀匹配</li><li>路由聚合：将相同路由的连续子网合并<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2Fziwangjuhe-.jpg" alt="路由聚合"><ol start="3"><li>动态主机配置协议——DHCP</li></ol></li><li>动态主机配置协议：为网络内的主机提供动态IP地址分配服务</li><li>运行过程：<ul><li>DHCP服务器发现</li><li>DHCP服务器提供</li><li>DHCP服务器请求</li><li>DHCP确认    4. 网络地址转换NAT——使用私有地址访问互联网</li></ul></li><li>从内网进入互联网的IP数据报：将其源IP地址替换为NAT服务器拥有的合法的公共IP地址，同时替换源端口号，并将替换关系记录到NAT转换表中。</li><li>从互联网返回的IP数据报：依据其目IP地址与目的端口号检索NAT转换表，得到内部私有IP地址与端口号，替换为目的IP地址和目的端口号，然后将IP数据报转发到内部网络。    5. 互联网控制报文协议（ICMP）——在主机或路由器间，实现差错信息报告</li><li>ICMP差错报告报文共有5种：<ul><li>终点不可达</li><li>源点抑制</li><li>时间超时</li><li>参数问题</li><li>路由重定向</li></ul></li><li>ICMP询问报文：回声（echo）请求/应答，时间戳（timestamp）请求/应答。    6. IPv6</li><li>解决IPv4地址耗尽的问题</li><li>IPv6报文首部长度固定40字节</li><li>IPv6地址长度128位</li><li>IPv4到IPv6的迁移：双协议线，隧道 </li></ul></li></ol><h2 id="六、路由算法与路由协议"><a href="#六、路由算法与路由协议" class="headerlink" title="六、路由算法与路由协议"></a>六、路由算法与路由协议</h2><ol><li>链路状态路由选择算法 <code>*</code><ul><li>链路状态路由选择算法是一种全局式路由选择算法。每个路由器通过从其他路由器获得链路状态信息构建出整个网络的拓扑图。</li><li>计算最短路径-Dijkstra算法</li></ul></li><li>距离向量路由选择算法 <code>*</code><ul><li>每个结点基于其与邻居结点间的直接链路距离，以及邻居交换过来的距离向量，计算并更新其到达每个目标结点的最短距离，然后将新的距离向量再通告给其他所有令居，直到距离向量不再改变。</li></ul></li><li>层次化路由选择——实现大规模网络路由选择最有效的，可行的解决方案。 <ul><li>划分自治系统：<ul><li>网关路由器</li><li>自治系统间路由协议</li></ul></li></ul></li><li>Internet路由选择协议<ul><li>内部网关协议<ul><li>RIP：基于<code>距离向量路由选择算法</code>，跳数作为距离度量，最大距离不超过15兆，每30秒交换一次距离向量。</li><li>OSPF：基于<code>链路状态路由选择算法</code></li></ul></li><li>外部网关协议：<code>BGP</code></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络03——传输层</title>
      <link href="/2022/03/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C03%E2%80%94%E2%80%94%E4%BC%A0%E8%BE%93%E5%B1%82/"/>
      <url>/2022/03/02/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C03%E2%80%94%E2%80%94%E4%BC%A0%E8%BE%93%E5%B1%82/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络——传输层"><a href="#计算机网络——传输层" class="headerlink" title="计算机网络——传输层"></a>计算机网络——传输层</h1><h2 id="一、传输层的基本服务"><a href="#一、传输层的基本服务" class="headerlink" title="一、传输层的基本服务"></a>一、传输层的基本服务</h2><ol><li><p>传输层的核心任务是 为应用进程之间提供端到端的逻辑通信服务。</p></li><li><p>传输层主要功能包括：</p><ul><li>传输层地址</li><li>应用层报文的分段和重组</li><li>报文的差错检测</li><li>进程间的端到端可靠数据传输控制</li><li>面向应用层实现复用与分解</li><li>端到端的流量控制</li><li>拥塞控制</li><li>传输层协议提供<code>逻辑通信</code>服务</li><li>传输层协议只需要在<code>端系统</code>中实现</li><li>通信的真正断点并不是主机，而是主机中运行的<code>应用进程</code></li></ul></li><li><p>传输层地址与端口号</p><ul><li>用统一的寻址方法对应用程序进行标识——<code>端口号</code></li><li>在全国范围内利用<code>“IP地址+端口号”</code>唯一标识一个通信端点</li><li>传输层端口号为<code>16</code>位整数，包含三类端口：</li><li>POP3：110端口、 SMTP：25端口、HTTP：80端口</li></ul><table><thead><tr><th align="center">端口类型</th><th align="center">数值特性</th><th align="center">备注</th></tr></thead><tbody><tr><td align="center">熟知端口号</td><td align="center">0——1023</td><td align="center"></td></tr><tr><td align="center">登记端口号</td><td align="center">1024——49151</td><td align="center">使用这个范围端口号必须在IANA登记以防止重复</td></tr><tr><td align="center">客户端口号或短暂端口号</td><td align="center">49152——65535</td><td align="center">留给客户进程选择使用</td></tr></tbody></table></li><li><p>无连接服务与面向连接服务</p><ul><li>无连接服务：数据传输之前无需与对端进行任何信息交换（即“握手”），直接构造传输层报文段并向接收端发送。（<code>UDP</code>）</li><li>面向连接服务：在数据传输之前，需要双方交换一些控制信息，建立逻辑连接，然后再传输数据，数据传输结束后还需要拆除连接。（<code>TCP</code>）</li></ul></li></ol><h2 id="二、传输层的复用与分解"><a href="#二、传输层的复用与分解" class="headerlink" title="二、传输层的复用与分解"></a>二、传输层的复用与分解</h2><ol><li>多路复用与多路分解：是传输层的一项<code>基本功能</code>，支持众多应用进程共用同一个传输层协议，并能够将接受到的数据准确交付给不同的应用进程。 </li><li>无连接的多路复用与多路分解<ul><li>UDP套接字：<code>&lt;目的IP地址，目的端口号&gt;</code></li><li>UDP套接字的端口号是UDP实现复用与分解的重要依据</li></ul></li><li>面向连接的多路复用与多路分解<ul><li>TCP套接字（标识一条TCP连接）：<code>&lt;源IP地址，源端口号，目标的P地址，目的端口号&gt;</code></li><li>当一个TCP报文段从网络层到达一台主机时，该主机根据这4个值来将报文分段到相应的套接字。</li></ul></li></ol><h2 id="三、停—等协议与滑动窗口协议"><a href="#三、停—等协议与滑动窗口协议" class="headerlink" title="三、停—等协议与滑动窗口协议"></a>三、停—等协议与滑动窗口协议</h2><ol><li>实现可靠传输的措施：<ul><li>差错检测：利用差错编码实现数据包传输过程中的比特差错检测。</li><li>确认：接收方向发送方反馈接收状态。</li><li>重传：发送方重新发送接收方没有正确接收的数据。</li><li>序号：确保数据按序提交。</li><li>计时器：解决数据丢失问题。</li></ul></li><li>停——等协议：主要特点就是每发送一个报文段后就停下来等待接收方的确认</li><li>停——等协议的基本工作原理：<ul><li>发送方发送经过差错编码和编码的报文段，等待接收方确认；（发送等待确认）</li><li>接收方如果正确接收报文段，即差错检测无误且序号正确，则接收报文段，并向发送方<code>发送ACK</code>，否则丢弃报文段，并向发送端<code>发送NAK</code>；（接收并确认/否认）</li><li>发送方如果收到ACK，则继续发送后续报文，否则重发刚刚发送的报文段。（继续发送/重发）</li></ul></li><li>滑动窗口协议（典型的流水线协议）<ul><li>流水线协议或管道协议——允许发送方在没有收到确认前连续发送多个分组。</li><li>流水线协议的改进：增加分组序号范围、发送方和（或）接收方必须缓存多个分组。</li><li>两种具有代表性的滑动窗口协议：回退N步（GBN）协议、选择重传（SR）协议。<br><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fwww.pianshen.com%2Fimages%2F952%2F8fa7986d04aaedb872384e647e414be8.png&amp;refer=http%3A%2F%2Fwww.pianshen.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1648731340&amp;t=78d0c6420112ac1c8c17d376009747a1"></li></ul></li></ol><h2 id="四、用户数据报协议（UDP）"><a href="#四、用户数据报协议（UDP）" class="headerlink" title="四、用户数据报协议（UDP）"></a>四、用户数据报协议（UDP）</h2><ol><li>UDP的数据结构<ul><li>源和目的端口号：用于UDP实现复用与分解。</li><li>长度字段：在UDP报文段中的字节数（首部和数据的总和）。</li><li>校验和：接收方用来检测报文段是否出现了差错。</li></ul></li><li>计算校验和<ul><li>对所有参数与运算的内容（包括UDP报文段）按16位（16位对齐）求和</li><li>求和过程遇到的任何溢出（即进位）都被回卷（即进位与和的最低为相加）</li><li>最后得到的和取反码</li></ul></li></ol><h2 id="五、传输控制协议（TCP）"><a href="#五、传输控制协议（TCP）" class="headerlink" title="五、传输控制协议（TCP）"></a>五、传输控制协议（TCP）</h2><ol><li><p>TCP报文段结构</p><ul><li>TCP首部和TCP数据部分</li></ul><p> <img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/TCP.png"> </p></li><li><p>TCP连接管理</p><ul><li>连接建立——三次握手<ul><li>SYN连接请求</li><li>SYNACK确认</li><li>ACK确认</li></ul></li></ul><p> <img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/TCPhand.jpg"></p></li><li><p>TCP断开连接的过程——四次挥手</p><ul><li>可以是客户端先发送请求，也可以是服务端先发送请求。<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/Internet%2FTCPfour.png"></li></ul></li><li><p>TCP可靠数据传输</p><ul><li>TCP的可靠数据传输实现机制包括差错编码、确认、序号、重传、计时器等。</li><li>TCP的可靠数据传输是基于滑动窗口协议，但是发送窗口大小动态变化。<ul><li>封装TCP报文</li><li>发送一个报文后启动一个计时器</li><li>通过校验和发送数据差错</li><li>通过序号重新排序，丢弃重复的报文段</li><li>流量控制</li></ul></li></ul></li><li><p>TCP流量控制</p><ul><li>TCP协议利用窗口机制实现流量控制，但不是简单的滑动窗口协议。</li><li>TCP连接建立时，双方都为之分配固定大小的缓冲空间；TCP的接收端只允许另一端发送其缓冲区所能接纳的数据。<ul><li>接收端在给发送端发送确认段时，通告接收端口大小；</li><li>发送端在接下来发送数据段时，确保未确认段的应用层数据总量不超过接收端通告的接收窗口大小，从而确保接收端不会发生缓存溢出。</li></ul></li></ul></li><li><p>TCP拥塞控制</p><ul><li>窗口机制：通过调节窗口的大小实现对发送数据速率的调整。</li><li>窗口调整基本策略：AIMD（Additive Incease,Multiplicative Decrease）加性增加，乘性减少；网络未发生拥塞时，逐渐“加性”增大窗口大小，当网络拥塞时“乘性”快速减小窗口大小。</li><li>TCP的拥塞控制算法：包括了<code>慢启动</code>，<code>拥塞避免</code>，<code>快速重传</code>和<code>快速恢复</code>4个部分。</li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络第二章</title>
      <link href="/2022/02/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%AC%E4%BA%8C%E7%AB%A0/"/>
      <url>/2022/02/28/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E7%AC%AC%E4%BA%8C%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络——网络应用"><a href="#计算机网络——网络应用" class="headerlink" title="计算机网络——网络应用"></a>计算机网络——网络应用</h1><h2 id="一、计算机网络应用体系结构"><a href="#一、计算机网络应用体系结构" class="headerlink" title="一、计算机网络应用体系结构"></a>一、计算机网络应用体系结构</h2><ol><li>三种类型<ul><li>客户/服务器（C/S）结构。</li><li>P2P（Peer to Peer）结构  ——点对点结构（对等端可以进行直接通信）。</li><li>混合结构：既有中心服务器的存在，又有对等端（客户）间的直接通信。</li></ul></li></ol><h2 id="二、网络应用通信基本原理"><a href="#二、网络应用通信基本原理" class="headerlink" title="二、网络应用通信基本原理"></a>二、网络应用通信基本原理</h2><ol><li><code>C/S</code>通信的基本原理：<ul><li>服务器端运行的是服务器进程，被动的等待客户请求服务。</li><li>客户端运行的是客户进程，主动发起通信，请求服务器进程提供服务。</li><li>应用进程间遵循应用层协议交换应用层报文。</li></ul></li></ol><h2 id="三、域名系统（DNS）"><a href="#三、域名系统（DNS）" class="headerlink" title="三、域名系统（DNS）**"></a>三、域名系统（DNS）**</h2><ol><li><p>层次树状结构的命名方法</p><ul><li>国家顶级域名nTLD</li><li>通用顶级域名gTLD</li><li>基础结构域名</li></ul></li><li><p>域名服务器</p></li></ol><ul><li>域名解析<ul><li>将域名映射为IP地址的过程。</li></ul></li><li>域名服务器<ul><li>实现域名解析，需要建立分布式数据库，存储网络中域名和IP地址的对应关系。</li></ul></li><li>域名服务器分类<ul><li>根域名服务器</li><li>顶级域名服务器</li><li>权威域名服务器</li><li>本地域名服务器 </li></ul></li></ul><ol start="3"><li>域名解析过程</li></ol><ul><li>递归查询 <ul><li>代替查询主机或其他域名服务器。</li><li>进行进一步的域名查询。</li><li>并将最终解析结果发送给查询主机或服务器。</li></ul></li><li>迭代查询<ul><li>只是将下一步要查询发服务器告知查询你主机或服务器。</li></ul></li></ul><h2 id="四、万维网应用结构"><a href="#四、万维网应用结构" class="headerlink" title="四、万维网应用结构"></a>四、万维网应用结构</h2><ol><li>万维网的结构包括：</li></ol><ul><li><p>Web服务器</p></li><li><p>浏览器</p></li><li><p>超文本传输协议（http)</p><ul><li>超文本传输协议，定义浏览器如何向Web服务器发送请求以及Web服务器如何向浏览器响应。</li><li>版本：HTTP/1.0 和 HTTP/1.1</li><li>HTTP连接非持久连接，持久连接。</li></ul></li><li><p>HTTP</p><ul><li><p>请求行：请求方法+URL+版本、首部行：值。</p></li><li><p>请求方法：GET、HEAD、POST、OPTION、PUT等。</p></li><li><p>状态行：版本+状态码+短语、首部行字段：值。</p></li><li><p>HTTP响应报状态码</p><table><thead><tr><th align="center">状态码</th><th align="center">作用</th><th align="center">描述</th></tr></thead><tbody><tr><td align="center">1XX</td><td align="center">信息提示</td><td align="center">通告信息，可能还需要进一步交互</td></tr><tr><td align="center">2XX</td><td align="center">成功</td><td align="center">成功完成客户端请求的操作，并进行响应</td></tr><tr><td align="center">3XX</td><td align="center">重定向</td><td align="center">表示资源已移走，需要向新URL发送请求</td></tr><tr><td align="center">4XX</td><td align="center">客户端错误</td><td align="center">由于客户端请求错误，无法成功响应</td></tr><tr><td align="center">5XX</td><td align="center">服务端错误</td><td align="center">由于服务端错误，无法成功响应</td></tr></tbody></table></li><li><p>某些网站为了辨别用户身份、进行会话跟踪而存储在用户本地终端上的数据。</p></li><li><p>弥补HTTP协议无状态的不足，有助于进行用户跟踪并提供针对性的服务。</p></li></ul></li></ul><h2 id="五、电子邮件系统结构"><a href="#五、电子邮件系统结构" class="headerlink" title="五、电子邮件系统结构"></a>五、电子邮件系统结构</h2><ol><li>电子邮件系统包括：邮件服务器、简单邮件传输协议（SMTP）、用户代理和邮件读取协议等。</li><li>SMTP 协议     - 是<code>Internet</code>电子邮件中核心应用层协议，实现<code>邮件服务器之间</code>或<code>用户代理到邮件服务器之间</code>的邮件传输。     - SMTP使用传输层TCP实现可靠数据传输，端口号25     - SMTP通过三个阶段的应用层交互完成邮件传输，分别是：<code>握手阶段</code>、<code>邮件传输阶段</code>、<code>关闭阶段</code>。</li><li>邮件读取协议     - 第三版的邮件协议（Post Office Protocol-Version 3,POP3）     - 互联网邮件访问协议 （Internet Mail Access Protocol, IMAP）     - HTTP</li></ol><h2 id="六、文件传送协议（FTP）"><a href="#六、文件传送协议（FTP）" class="headerlink" title="六、文件传送协议（FTP）"></a>六、文件传送协议（FTP）</h2><ul><li>FTP：在互联网的两个主机之间实现文件互传的应用层协议。<ul><li>C/S模式，采用<code>控制连接</code>(21端口)传输控制命令，<code>数据连接</code>（20端口）传输文件内容。</li><li>如图所示：<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/FTP.png"></li></ul></li></ul><h2 id="七、P2P应用"><a href="#七、P2P应用" class="headerlink" title="七、P2P应用"></a>七、P2P应用</h2><ul><li>P2P应用的优势<ul><li>充分聚集利用了端系统（对等方主机）的计算能力以及网络传输带宽。</li><li>对服务器的依赖很小。</li></ul></li><li>P2P示意图<br><img src="https://gimg2.baidu.com/image_search/src=http%3A%2F%2Fbkimg.cdn.bcebos.com%2Fpic%2F960a304e251f95ca796fa994cb177f3e6709527d&amp;refer=http%3A%2F%2Fbkimg.cdn.bcebos.com&amp;app=2002&amp;size=f9999,10000&amp;q=a80&amp;n=0&amp;g=0n&amp;fmt=jpeg?sec=1648649909&amp;t=d850cb6031d518925e083ccb9f1535c8"></li></ul><h2 id="八、socket编程基础"><a href="#八、socket编程基础" class="headerlink" title="八、socket编程基础"></a>八、socket编程基础</h2><ol><li>网络应用进程通信时需要通过API接口请求协议的服务，可以创建：<ul><li>数据报类型套接字SOCK_DGRAM</li><li>流式套接字SOCK_STREAM</li><li>原始套接字SOCK_RAW<br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/SOCKET.png"></li></ul></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计算机网络 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>计算机网络01</title>
      <link href="/2022/02/12/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C01/"/>
      <url>/2022/02/12/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C01/</url>
      
        <content type="html"><![CDATA[<h1 id="计算机网络学习笔记"><a href="#计算机网络学习笔记" class="headerlink" title="计算机网络学习笔记"></a>计算机网络学习笔记</h1><h2 id="一、计算机网络的基本知识"><a href="#一、计算机网络的基本知识" class="headerlink" title="一、计算机网络的基本知识"></a>一、计算机网络的基本知识</h2><h3 id="（1）计算机网络的基本概念"><a href="#（1）计算机网络的基本概念" class="headerlink" title="（1）计算机网络的基本概念"></a>（1）计算机网络的基本概念</h3><ol><li>计算机网络的概念：计算机网络是互连的，自治的计算机集合。</li><li>协议的定义：协议是网络实体之间数据交换过程中需要遵循的规则或约定，包括三要素：语法、语义、时序。</li><li>计算机网络的功能：硬件资源共享、软件资源共享、信息资源共享。</li><li>计算机网络的分类<ul><li>按照覆盖范围：个域网、局域网、城域网、广域网。</li><li>按照拓扑结构：星形、总线型、环形、网状、树形、混合拓扑结构等。</li><li>按照交换方式：电路交换网络、报文交换网络、分组交换网络。</li><li>按照网络用户属性：公用网、私有网。</li></ul></li></ol><h3 id="（2）计算机网络的结构"><a href="#（2）计算机网络的结构" class="headerlink" title="（2）计算机网络的结构"></a>（2）计算机网络的结构</h3><ol><li>网络边缘：连接到网络上的所有端系统。</li><li>接入网络：接入网络实现 <strong>网络边缘</strong> 的端系统与 <strong>网络核心</strong> 的连接与接入。</li><li>网络核心：网络核心是由通信链路互联的分组交换设备构成的网络，作用是实现网络边缘中主机之间数据的中继和转发。</li></ol><h3 id="（3）数据交换"><a href="#（3）数据交换" class="headerlink" title="（3）数据交换"></a>（3）数据交换</h3><ol><li>数据交换的概念：交换结点和传输介质的集合称为通信子网，即网络核心。</li><li>电路交换：（电话） 需要先建立一条专用的通信线路，即电路（电话拨号），然后利用该电路进行通信（电话通话），通信结束后需要拆除电路（挂断电话）。<ul><li>优点：实时性高，时延和时延抖动都较小。</li><li>缺点：  对于突发性数据传输，信道利用率低，且传输速率单一。</li></ul></li><li>报文交换： 以报文为单位在交换网络的各个结点之间以 <strong>存储-转发</strong> 的方式传送。<ul><li>优点：不需要建立连接，只有当报文被转发时才会占用相应的信道。</li><li>缺点：交换结点需要缓冲存储，报文需要排队，增加了延迟。</li></ul></li><li>分组交换：将一个完整的报文拆分为若干个分组，分组传输的过程通常也采用 <strong>存储-转发</strong> 的交换方式。<ul><li>优点：交换设备存储容量要求低、交换速度快、可靠传输效率高、更加公平。</li><li>缺点：分组长度与延迟时间、分组长度与误码率。</li></ul></li></ol><h3 id="（4）计算机网络性能"><a href="#（4）计算机网络性能" class="headerlink" title="（4）计算机网络性能"></a>（4）计算机网络性能</h3><ol><li>速率：是指网络单位时间内传送的数据量，也称为数据传输速率或数据速率。速率的基本单位是bit/s(位每秒)。</li><li>带宽：原本是指信号具有的频带宽度)即信号成分的最高频率与最低频率之差，单位为Hz（赫兹)。</li><li>时延：时延是指从网络中的一个结点到达另一个结点所需要的时间。<ul><li>分组交换的每跳传输过程主要产生四类时间延迟：结点处理时延、排队时延、传输时延和传播时延。</li></ul></li><li>时延带宽积：一段物理链路的传播时延与链路带宽的乘积。表示一段链路可以容纳的数据位数，也称为以位为单位的链路长度。</li><li>丢包率：常被用于评价和衡量网络性能的指标，在很大程度上可以反应网络的拥塞程度。<ul><li>丢包率=丢失分组总数/发送分组总数</li></ul></li><li>吞吐量：单位时间内源主机通过网络向目的主机实际送达的数据量。</li></ol><h3 id="（5）计算机网络体系结构（分层）"><a href="#（5）计算机网络体系结构（分层）" class="headerlink" title="（5）计算机网络体系结构（分层）"></a>（5）计算机网络体系结构（分层）</h3><ol><li>计算机网络体系结构：计算机网络所划分的层次以及各层次协议的集合称为计算机网络体系结构。</li><li>OSI模型<ul><li>物理层(比特流)、数据链路层(DT)、网络层(N)、传输层(TH)、会话层(SH)、表示层(PH)、应用层(AH)。</li></ul></li><li>TCP/IP模型<ul><li>应用层</li><li>运输层 （TCP  UDP）</li><li>网际层  (IP)</li><li>网络接口层 </li></ul></li><li>五层模型<ul><li>应用层</li><li>传输层</li><li>网络层</li><li>链路层</li><li>物理层</li></ul></li><li>三种体系结构的对比分析 <br><br><img src="https://aiphoto-1305314152.cos.ap-chengdu.myqcloud.com/blog_img%2Fblog1.png"></li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习笔记 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>HTML表单验证知识复盘</title>
      <link href="/2022/01/27/HTML-form/"/>
      <url>/2022/01/27/HTML-form/</url>
      
        <content type="html"><![CDATA[<h1 id="HTML表单校验"><a href="#HTML表单校验" class="headerlink" title="HTML表单校验"></a>HTML表单校验</h1><h2 id="一、HTML表单标签"><a href="#一、HTML表单标签" class="headerlink" title="一、HTML表单标签"></a>一、HTML表单标签</h2><p> 表单主要用于网页收集用户填写信息，表单中的输入可以有单选框，复选框，下拉列表，文字输入，数字输入，文本域，密码输入等。<br> </p><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"> <span class="comment">&lt;!-- 1、action表示表单提交的服务地址，也可用js文件；</span></span><br><span class="line"><span class="comment">2、method表示提交方式，有post和get两种；</span></span><br><span class="line"><span class="comment">      3、表单中提交的数据为name=value&amp;name=value.....</span></span><br><span class="line"><span class="comment">      </span></span><br><span class="line"><span class="comment">       --&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"http://loaclhost:8080"</span> <span class="attr">method</span>=<span class="string">"get"</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交数据"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><p></p><ol><li><p>提交基本文本信息，<code>type="text"</code>,设置最大长<code>度maxlength="11"</code><br>&nbsp;</p><form><br> <label>用户名：</label> <input type="text" name="username" valuse="" maxlength="11"><p></p></form></li><li><p>密码信息，<code>type="password"</code><br>&nbsp;</p><form><br><label>密 码：</label> <input type="password" name="paswd" valuse=""><p></p></form></li><li><p>单选框，<code>type="radio"</code><br>&nbsp;</p><form><br> <input type="radio" name="sex" valuse="0" checked="">男<br> <input type="radio" name="sex" valuse="1">女<p></p></form></li><li><p>复选框，<code>type="checkbox"</code><br>&nbsp;</p><form><br> <input type="checkbox" name="interest" valuse="0" checked="">运动<br> <input type="checkbox" name="interest" valuse="1">美食<br> <input type="checkbox" name="interest" valuse="2">摄影<br> <input type="checkbox" name="interest" valuse="3">游戏<p></p></form></li><li><p>下拉菜单<br>&nbsp;</p><form><p></p><select><option value="0">选项一</option><option value="1">选项二</option><option value="2">选项三</option></select><br><br><select>    <optgroup label="大类一">      <option value="0">选项一</option>      <option value="1">选项二</option>    </optgroup>    <optgroup label="大类二">        <option value="0">选项一</option>        <option value="1">选项二</option>        <option value="2">选项三</option>    </optgroup></select></form></li></ol> <figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span> =<span class="string">"0"</span>&gt;</span>选项一<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span> =<span class="string">"1"</span>&gt;</span>选项二<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span> =<span class="string">"2"</span>&gt;</span>选项三<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">select</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">"大类一"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span> =<span class="string">"0"</span>&gt;</span>选项一<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span> =<span class="string">"1"</span>&gt;</span>选项二<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">optgroup</span> <span class="attr">label</span>=<span class="string">"大类二"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span> =<span class="string">"0"</span>&gt;</span>选项一<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span> =<span class="string">"1"</span>&gt;</span>选项二<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">option</span> <span class="attr">value</span> =<span class="string">"2"</span>&gt;</span>选项三<span class="tag">&lt;/<span class="name">option</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">optgroup</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">select</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><ol start="6"><li>文本域<br><label>输入你想输入的信息:</label>&nbsp;<textarea rows="4" cols="20"></textarea><figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">textarea</span> <span class="attr">rows</span>=<span class="string">"4"</span> <span class="attr">cols</span>=<span class="string">"20"</span>&gt;</span><span class="tag">&lt;/<span class="name">textarea</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure></li><li>提交按钮<br>&nbsp;<form action="" method="get"><br> 邮箱: <input type="email" name="mail" valuse="" placeholder="请输入你的邮箱地址" required=""> <input type="submit" value="提交邮箱地址"> <input type="reset" valuse="重置信息"></form></li></ol><h2 id="二、HTML表单提交的验证"><a href="#二、HTML表单提交的验证" class="headerlink" title="二、HTML表单提交的验证"></a>二、HTML表单提交的验证</h2><p>  表单的验证是对于用户填写数据是否符合要求的判断，只有当用户填写的数据满足表单设置需要时才会进行提交。</p><ol><li>HTNL5约束有效验证API，<code>checkValidity</code> 当元素的输入条件完全满足要求是<code>checkValidity</code>会变为<code>true</code>,否则其他条件时均为false。   <meta charset="utf-8">   <title>checkValidity验证</title>   <form action="../" method="post">       <input type="email" name="mail" id="test1" value="123@cc.com">       <input type="email" name="mail" id="test2" value="111">       <button onclick="checkstate()">点击验证</button>   </form><script>   var t1=document.getElementById("test1");   var t2=document.getElementById("test2");   function checkstate(){       console.log("点你就")      alert("输入框1的验证状态为："+t1.checkValidity() +"  输入框2的验证状态为："+t2.checkValidity());  }</script></li></ol>  <figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">"../"</span> <span class="attr">method</span>=<span class="string">"post"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"mail"</span> <span class="attr">id</span>=<span class="string">"test1"</span> <span class="attr">value</span>=<span class="string">"123@cc.com"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"mail"</span> <span class="attr">id</span>=<span class="string">"test2"</span> <span class="attr">value</span>=<span class="string">"111"</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span> <span class="attr">value</span>=<span class="string">"提交"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> t1=<span class="built_in">document</span>.getElementById(<span class="string">"test1"</span>);</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> t2=<span class="built_in">document</span>.getElementById(<span class="string">"test2"</span>);</span></span><br><span class="line"><span class="javascript"><span class="comment">// alert("sssd")</span></span></span><br><span class="line"><span class="javascript">alert(<span class="string">"输入框1的验证状态为："</span>+t1.checkValidity() +<span class="string">"  输入框2的验证状态为："</span>+t2.checkValidity());</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><ol start="2"><li>HTML约束条件验证setCustomValidity()用于设置表单验证不通过时用户可见的提示信息  <meta charset="utf-8">  <title>setCustomValidity()的应用</title>  输入：<input type="text" name="number" id="number" value="" placeholder="请输入6个数字" pattern="^\d{6}$" required="" oninput="checklong(this)">  <input type="submit" value="提交进行验证"><script type="text/javascript">  function checklong(obj)  {      var it=obj.validity;      if(it.valueMissing==true)      {          obj.setCustomValidity("输入的信息不能为空。。。。。。")      }      else if(it.patternMismatch==true)      {          obj.setCustomValidity("必须为6位数字哦")      }      else      {          obj.setCustomValidity("")      }  }</script></li></ol>   <figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">type</span>=<span class="string">"text/javascript"</span>&gt;</span><span class="javascript"></span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> username=<span class="built_in">document</span>.getElementById(<span class="string">"username"</span>)</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(number.validity)</span></span><br><span class="line"><span class="javascript"><span class="function"><span class="keyword">function</span> <span class="title">checklong</span>(<span class="params">obj</span>)</span></span></span><br><span class="line"><span class="function"><span class="javascript"></span>{</span></span><br><span class="line"><span class="javascript"><span class="keyword">var</span> it=obj.validity;</span></span><br><span class="line"><span class="javascript"><span class="built_in">console</span>.log(it.valueMissing)</span></span><br><span class="line"><span class="javascript">   <span class="keyword">if</span>(it.valueMissing==<span class="literal">true</span>)</span></span><br><span class="line"><span class="javascript">{</span></span><br><span class="line"><span class="javascript">obj.setCustomValidity(<span class="string">"输入信息不能为空"</span>);</span></span><br><span class="line"><span class="javascript">}<span class="keyword">else</span> <span class="keyword">if</span>(it.patternMismatch==<span class="literal">true</span>)</span></span><br><span class="line"><span class="javascript">{</span></span><br><span class="line"><span class="javascript">   obj.setCustomValidity(<span class="string">"必须是6个数字"</span>);</span></span><br><span class="line"><span class="javascript">}<span class="keyword">else</span>{</span></span><br><span class="line"><span class="javascript">obj.setCustomValidity(<span class="string">""</span>)</span></span><br><span class="line"><span class="javascript">}</span></span><br><span class="line"><span class="javascript">}</span></span><br><span class="line"><span class="javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><ol start="3"><li><p>HTML约束条件验证validity()展示各信息含义<br><img src="http://wew.fjtbkyc.net/image/001-1.jpg"></p></li><li><p>一些css的伪类选择器用于对表单进行美化 </p></li></ol><ul><li><code>:required</code>和<code>:optional</code>分别表示必填和选填内容。</li><li><code>:in-range</code>和<code>:out-of-range</code>分别表示输入内容在要求范围内和在要求范围外。</li><li><code>:validi</code>和<code>:invalid</code>分别表示输入内容符合表单验证要求和输入内容不符合表单验证要求。</li><li><code>:read-only</code>和<code>read-write</code>表示输入框具有的readonly或readwrite属性。</li></ul>                <meta charset="utf-8">        <title>一些常用的伪类选择器</title>        <style type="text/css">            input:required{                border-radius: 5px;                border: 2px solid green;            }            input:optional{                border: 2px solid hotpink;            }            input:in-range{                border-radius: 6px;                border: 1px solid #FF0000;            }            input:out-of-range{                border: 1px solid plum;            }            /* 取消选中样式 */            input{                outline: 0;            }            input#mail:valid ~label::after{content: "输入正确";}            input#mail:invalid ~label::after{content: "输入信息有误";}            input#mail:valid{                border: 1px solid aquamarine;               color: #008000;            }            input#mail:invalid{                border: 1px solid crimson;            }        </style>                必填项：<input type="text" name="username" id="user" value="" required=""><br><label for="user"><label>        选填项: <input type="text" name="usernamee" value=""><br>        100~9999之间： <input type="number" name="number" value="" max="9999" min="100"><br>        邮箱验证：<input type="email" name="email" id="mail" value="" placeholder="请输入邮箱" required=""><label></label>         <figure class="highlight html"><table><tbody><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">  <span class="tag">&lt;<span class="name">style</span> <span class="attr">type</span>=<span class="string">"text/css"</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css"><span class="selector-tag">input</span><span class="selector-pseudo">:required</span>{</span></span><br><span class="line"><span class="css"><span class="attribute">border-radius</span>: <span class="number">5px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">border</span>: <span class="number">2px</span> solid green;</span></span><br><span class="line"><span class="css">}</span></span><br><span class="line"><span class="css"><span class="selector-tag">input</span><span class="selector-pseudo">:optional</span>{</span></span><br><span class="line"><span class="css"><span class="attribute">border</span>: <span class="number">2px</span> solid hotpink;</span></span><br><span class="line"><span class="css">}</span></span><br><span class="line"><span class="css"><span class="selector-tag">input</span><span class="selector-pseudo">:in-range</span>{</span></span><br><span class="line"><span class="css"><span class="attribute">border-radius</span>: <span class="number">6px</span>;</span></span><br><span class="line"><span class="css"><span class="attribute">border</span>: <span class="number">1px</span> solid <span class="number">#FF0000</span>;</span></span><br><span class="line"><span class="css">}</span></span><br><span class="line"><span class="css"><span class="selector-tag">input</span><span class="selector-pseudo">:out-of-range</span>{</span></span><br><span class="line"><span class="css"><span class="attribute">border</span>: <span class="number">1px</span> solid plum;</span></span><br><span class="line"><span class="css">}</span></span><br><span class="line"><span class="css"><span class="comment">/* 取消选中样式 */</span></span></span><br><span class="line"><span class="css"><span class="selector-tag">input</span>{</span></span><br><span class="line"><span class="css"><span class="attribute">outline</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="css">}</span></span><br><span class="line"><span class="css"><span class="selector-tag">input</span><span class="selector-pseudo">:valid</span> ~<span class="selector-tag">label</span><span class="selector-pseudo">::after</span>{<span class="attribute">content</span>: <span class="string">"输入正确"</span>;}</span></span><br><span class="line"><span class="css"><span class="selector-tag">input</span><span class="selector-pseudo">:invalid</span> ~<span class="selector-tag">label</span><span class="selector-pseudo">::after</span>{<span class="attribute">content</span>: <span class="string">"输入信息有误"</span>;}</span></span><br><span class="line"><span class="css"><span class="selector-tag">input</span><span class="selector-id">#mail</span><span class="selector-pseudo">:valid</span>{</span></span><br><span class="line"><span class="css"><span class="attribute">border</span>: <span class="number">1px</span> solid aquamarine;</span></span><br><span class="line"><span class="css">   <span class="attribute">color</span>: <span class="number">#008000</span>;</span></span><br><span class="line"><span class="css">}</span></span><br><span class="line"><span class="css"><span class="selector-tag">input</span><span class="selector-id">#mail</span><span class="selector-pseudo">:invalid</span>{</span></span><br><span class="line"><span class="css"><span class="attribute">border</span>: <span class="number">1px</span> solid crimson;</span></span><br><span class="line"><span class="css">}</span></span><br><span class="line"><span class="css"><span class="selector-tag">input</span><span class="selector-pseudo">:read-only</span>{</span></span><br><span class="line"><span class="css"><span class="attribute">color</span>: blue;</span></span><br><span class="line"><span class="css">}</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">必填项：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"username"</span> <span class="attr">id</span>=<span class="string">"user"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">required</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">选填项: <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"usernamee"</span> <span class="attr">value</span>=<span class="string">""</span> /&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">100~9999之间： <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"number"</span> <span class="attr">name</span>=<span class="string">"number"</span> <span class="attr">value</span>=<span class="string">""</span>  <span class="attr">max</span>=<span class="string">"9999"</span> <span class="attr">min</span>=<span class="string">"100"</span>/&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">    邮箱验证：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"email"</span> <span class="attr">name</span>=<span class="string">"email"</span> <span class="attr">id</span>=<span class="string">"mail"</span> <span class="attr">value</span>=<span class="string">""</span> <span class="attr">placeholder</span>=<span class="string">"请输入邮箱"</span> <span class="attr">required</span> /&gt;</span><span class="tag">&lt;<span class="name">label</span> &gt;</span><span class="tag">&lt;/<span class="name">label</span>&gt;</span><span class="tag">&lt;<span class="name">br</span> /&gt;</span></span><br><span class="line">只读：<span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"text"</span> <span class="attr">name</span>=<span class="string">"read"</span> <span class="attr">id</span>=<span class="string">"read"</span> <span class="attr">value</span>=<span class="string">"天下武功,唯快不破"</span> <span class="attr">readonly</span> /&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">"submit"</span>  /&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br></pre></td></tr></tbody></table></figure><h2 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h2><p>   经过上面的课程学习，对HTML的表单提交相关知识进行了巩固，一个表单中存在着众多知识点，同时表单也是页面中一个重要的组成部分。后面会对CSS的相关知识进行一定的学习和总结。</p></label></label>]]></content>
      
      
      
        <tags>
            
            <tag> HTML </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的第一篇文章</title>
      <link href="/2022/01/18/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/01/18/%E6%88%91%E7%9A%84%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="我的第一篇文章"><a href="#我的第一篇文章" class="headerlink" title="我的第一篇文章"></a>我的第一篇文章</h1><hr><h2 id="运用hexo搭建了一个博客，试着在里面写一些东西，对于新鲜事物的好奇。"><a href="#运用hexo搭建了一个博客，试着在里面写一些东西，对于新鲜事物的好奇。" class="headerlink" title="运用hexo搭建了一个博客，试着在里面写一些东西，对于新鲜事物的好奇。"></a>运用hexo搭建了一个博客，试着在里面写一些东西，对于新鲜事物的好奇。</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
